{"version":3,"file":"overlay-types.js","sourceRoot":"","sources":["../../../../../src/packages/overlay/src/overlay-types.ts"],"names":[],"mappings":"AAAA,kDAAkD","sourcesContent":["/* Copyright 2021 i2c Inc. All rights reserved. */\r\n\r\nimport { ThemeData } from '../../theme/src';\r\nimport { Placement as PopperPlacement } from './popper';\r\n\r\nexport type TriggerInteractions =\r\n    | 'click'\r\n    | 'longpress'\r\n    | 'hover'\r\n    | 'custom'\r\n    | 'replace'\r\n    | 'inline'\r\n    | 'modal';\r\n\r\nexport interface OverlayOpenDetail {\r\n    content: HTMLElement;\r\n    contentTip?: HTMLElement;\r\n    delayed: boolean;\r\n    offset: number;\r\n    placement?: Placement;\r\n    receivesFocus?: 'auto';\r\n    trigger: HTMLElement;\r\n    interaction: TriggerInteractions;\r\n    theme: ThemeData;\r\n    notImmediatelyClosable?: boolean;\r\n    abortPromise?: Promise<boolean>;\r\n}\r\n\r\nexport interface OverlayOpenCloseDetail {\r\n    interaction: TriggerInteractions;\r\n}\r\n\r\n/**\r\n * Used, via an event, to query details about how an element should be shown in\r\n * an overlay\r\n */\r\nexport interface OverlayDisplayQueryDetail {\r\n    overlayRootName?: string;\r\n    overlayRootElement?: HTMLElement;\r\n    overlayContentTipElement?: HTMLElement;\r\n}\r\n\r\nexport type Placement = PopperPlacement | 'none';\r\n\r\nexport type OverlayOptions = {\r\n    delayed?: boolean;\r\n    placement?: Placement;\r\n    offset?: number;\r\n    receivesFocus?: 'auto';\r\n    notImmediatelyClosable?: boolean;\r\n    abortPromise?: Promise<boolean>;\r\n};\r\n\r\ndeclare global {\r\n    interface GlobalEventHandlersEventMap {\r\n        'sp-overlay-query': CustomEvent<OverlayDisplayQueryDetail>;\r\n        'sp-open': CustomEvent<OverlayOpenCloseDetail>;\r\n        'sp-close': CustomEvent<OverlayOpenCloseDetail>;\r\n    }\r\n}"]}