{"version":3,"file":"overlay-timer.js","sourceRoot":"","sources":["../../../../../src/packages/overlay/src/overlay-timer.ts"],"names":[],"mappings":"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","sourcesContent":["/* Copyright 2021 i2c Inc. All rights reserved. */\r\n\r\nconst DEFAULT_WARMUP = 1000;\r\nconst DEFAULT_COOLDOWN = 1000;\r\n\r\nexport class OverlayTimer {\r\n    private warmUpDelay = DEFAULT_WARMUP;\r\n    private coolDownDelay = DEFAULT_COOLDOWN;\r\n\r\n    private isWarm = false;\r\n    private cooldownTimeout?: number;\r\n\r\n    private component?: HTMLElement;\r\n    private timeout = 0;\r\n    private promise?: Promise<boolean>;\r\n    private resolve?: (cancelled: boolean) => void;\r\n\r\n    constructor(\r\n        options: { warmUpDelay?: number; coolDownDelay?: number } = {}\r\n    ) {\r\n        Object.assign(this, options);\r\n    }\r\n\r\n    public async openTimer(component: HTMLElement): Promise<boolean> {\r\n        this.cancelCooldownTimer();\r\n\r\n        if (!this.component || component !== this.component) {\r\n            if (this.component) {\r\n                this.close(this.component);\r\n                this.cancelCooldownTimer();\r\n            }\r\n            this.component = component;\r\n\r\n            if (this.isWarm) {\r\n                return false;\r\n            }\r\n\r\n            this.promise = new Promise((resolve) => {\r\n                this.resolve = resolve;\r\n                this.timeout = window.setTimeout(() => {\r\n                    if (this.resolve) {\r\n                        this.resolve(false);\r\n                        this.isWarm = true;\r\n                    }\r\n                }, this.warmUpDelay);\r\n            });\r\n            return this.promise;\r\n        } else if (this.promise) {\r\n            return this.promise;\r\n        } else {\r\n            // This should never happen\r\n            throw new Error('Inconsistent state');\r\n        }\r\n    }\r\n\r\n    public close(component: HTMLElement): void {\r\n        if (this.component && this.component === component) {\r\n            this.resetCooldownTimer();\r\n            if (this.timeout > 0) {\r\n                clearTimeout(this.timeout);\r\n                this.timeout = 0;\r\n            }\r\n            if (this.resolve) {\r\n                this.resolve(true);\r\n                delete this.resolve;\r\n            }\r\n            delete this.promise;\r\n            delete this.component;\r\n        }\r\n    }\r\n\r\n    private resetCooldownTimer(): void {\r\n        if (this.isWarm) {\r\n            if (this.cooldownTimeout) {\r\n                window.clearTimeout(this.cooldownTimeout);\r\n            }\r\n            this.cooldownTimeout = window.setTimeout(() => {\r\n                this.isWarm = false;\r\n                delete this.cooldownTimeout;\r\n            }, this.coolDownDelay);\r\n        }\r\n    }\r\n\r\n    private cancelCooldownTimer(): void {\r\n        if (this.cooldownTimeout) {\r\n            window.clearTimeout(this.cooldownTimeout);\r\n        }\r\n        delete this.cooldownTimeout;\r\n    }\r\n}\r\n"]}