{"version":3,"file":"ActiveOverlay.js","sourceRoot":"","sources":["../../../../../src/packages/overlay/src/ActiveOverlay.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n    CSSResultArray,\r\n    html,\r\n    ifDefined,\r\n    property,\r\n    PropertyValues,\r\n    SpectrumElement,\r\n    TemplateResult,\r\n} from '../../base/src/index';\r\n\r\nimport { reparentChildren } from '../../shared/src/index';\r\nimport { Color, Scale } from '../../theme/src/index';\r\nimport styles from './active-overlay.css.js';\r\nimport {\r\n    OverlayOpenDetail,\r\n    Placement,\r\n    TriggerInteractions,\r\n} from './overlay-types.js';\r\nimport { applyMaxSize, createPopper, Instance, maxSize } from './popper.js';\r\n\r\nexport interface PositionResult {\r\n    arrowOffsetLeft: number;\r\n    arrowOffsetTop: number;\r\n    maxHeight: number;\r\n    placement: string;\r\n    positionLeft: number;\r\n    positionTop: number;\r\n}\r\n\r\ndeclare global {\r\n    interface Document {\r\n        fonts?: {\r\n            ready: Promise<void>;\r\n        };\r\n    }\r\n}\r\n\r\ntype OverlayStateType =\r\n    | 'idle'\r\n    | 'active'\r\n    | 'visible'\r\n    | 'hiding'\r\n    | 'dispose'\r\n    | 'disposed';\r\ntype ContentAnimation = 'spOverlayFadeIn' | 'spOverlayFadeOut';\r\n\r\nconst stateMachine: {\r\n    initial: OverlayStateType;\r\n    states: {\r\n        [stateName: string]: {\r\n            on: {\r\n                [transitionName: string]: OverlayStateType;\r\n            };\r\n        };\r\n    };\r\n} = {\r\n    initial: 'idle',\r\n    states: {\r\n        idle: {\r\n            on: {\r\n                active: 'active',\r\n            },\r\n        },\r\n        active: {\r\n            on: {\r\n                visible: 'visible',\r\n                hiding: 'hiding',\r\n                idle: 'idle',\r\n            },\r\n        },\r\n        visible: {\r\n            on: {\r\n                hiding: 'hiding',\r\n                idle: 'idle',\r\n            },\r\n        },\r\n        hiding: {\r\n            on: {\r\n                dispose: 'dispose',\r\n            },\r\n        },\r\n        dispose: {\r\n            on: {\r\n                disposed: 'disposed',\r\n            },\r\n        },\r\n        disposed: {\r\n            on: {},\r\n        },\r\n    },\r\n};\r\n\r\nconst stateTransition = (\r\n    state?: OverlayStateType,\r\n    event?: string\r\n): OverlayStateType => {\r\n    if (!state) return stateMachine.initial;\r\n    /* c8 ignore next */\r\n    if (!event) return state;\r\n    return stateMachine.states[state].on[event] || state;\r\n};\r\n\r\nexport class ActiveOverlay extends SpectrumElement {\r\n    public overlayContent!: HTMLElement;\r\n    public overlayContentTip?: HTMLElement;\r\n    public trigger!: HTMLElement;\r\n\r\n    private popper?: Instance;\r\n\r\n    @property()\r\n    public _state = stateTransition();\r\n    public get state(): OverlayStateType {\r\n        return this._state;\r\n    }\r\n\r\n    public set state(state: OverlayStateType) {\r\n        const nextState = stateTransition(this.state, state);\r\n        if (nextState === this.state) {\r\n            return;\r\n        }\r\n        this._state = nextState;\r\n        if (\r\n            this.state === 'active' ||\r\n            this.state === 'visible' ||\r\n            this.state === 'hiding'\r\n        ) {\r\n            this.setAttribute('state', this.state);\r\n        } else {\r\n            this.removeAttribute('state');\r\n        }\r\n    }\r\n\r\n    @property({ reflect: true, type: Boolean })\r\n    public animating = false;\r\n\r\n    @property({ reflect: true })\r\n    public placement?: Placement;\r\n    @property({ attribute: false })\r\n    public color?: Color;\r\n    @property({ attribute: false })\r\n    public receivesFocus?: 'auto';\r\n    @property({ attribute: false })\r\n    public scale?: Scale;\r\n\r\n    public tabbingAway = false;\r\n    private originalPlacement?: Placement;\r\n    private restoreContent?: () => Element[];\r\n\r\n    /**\r\n     * @prop Used by the popper library to indicate where the overlay was\r\n     *       actually rendered. Popper may switch which side an overlay\r\n     *       is rendered on to fit it on the screen\r\n     */\r\n    @property({ attribute: 'data-popper-placement' })\r\n    public dataPopperPlacement?: Placement;\r\n\r\n    public focus(): void {\r\n        const firstFocusable = this.querySelector(\r\n            'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"]), [focusable]'\r\n        ) as HTMLElement;\r\n        if (firstFocusable) {\r\n            firstFocusable.focus();\r\n            this.removeAttribute('tabindex');\r\n            /* c8 ignore next 3 */\r\n        } else {\r\n            super.focus();\r\n        }\r\n    }\r\n\r\n    private get hasTheme(): boolean {\r\n        return !!this.color || !!this.scale;\r\n    }\r\n\r\n    public offset = 6;\r\n    public interaction: TriggerInteractions = 'hover';\r\n    private positionAnimationFrame = 0;\r\n\r\n    private timeout?: number;\r\n\r\n    public static get styles(): CSSResultArray {\r\n        return [styles];\r\n    }\r\n\r\n    public constructor() {\r\n        super();\r\n        this.stealOverlayContentPromise = new Promise(\r\n            res => (this.stealOverlayContentResolver = res)\r\n        );\r\n    }\r\n\r\n    private _modalRoot?: ActiveOverlay;\r\n\r\n    public get hasModalRoot(): boolean {\r\n        return !!this._modalRoot;\r\n    }\r\n\r\n    public feature(): void {\r\n        this.tabIndex = 0;\r\n        const parentOverlay = this.trigger.closest('active-overlay');\r\n        const parentIsModal = parentOverlay && parentOverlay.slot === 'open';\r\n        // If an overlay it triggered from within a \"modal\" overlay, it needs to continue\r\n        // to act like one to get treated correctly in regards to tab trapping.\r\n        if (this.interaction === 'modal' || parentIsModal || this._modalRoot) {\r\n            this.slot = 'open';\r\n            // If this isn't a modal root, walk up the overlays to the next modal root\r\n            // and \"feature\" each on of the intervening overlays.\r\n            if (this._modalRoot) {\r\n                parentOverlay?.feature();\r\n            }\r\n        }\r\n    }\r\n\r\n    public obscure(\r\n        nextOverlayInteraction: TriggerInteractions\r\n    ): ActiveOverlay | undefined {\r\n        if (this.slot && nextOverlayInteraction === 'modal') {\r\n            this.removeAttribute('slot');\r\n            // Obscure upto and including the next modal root.\r\n            if (this.interaction !== 'modal') {\r\n                const parentOverlay = this.trigger.closest('active-overlay');\r\n                this._modalRoot = parentOverlay?.obscure(\r\n                    nextOverlayInteraction\r\n                );\r\n                return this._modalRoot;\r\n            }\r\n            return this;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    public firstUpdated(changedProperties: PropertyValues): void {\r\n        super.firstUpdated(changedProperties);\r\n\r\n        /* c8 ignore next */\r\n        if (!this.overlayContent) return;\r\n\r\n        this.stealOverlayContent(this.overlayContent);\r\n\r\n        /* c8 ignore next */\r\n        if (!this.overlayContent || !this.trigger) return;\r\n\r\n        if (this.placement && this.placement !== 'none') {\r\n            this.popper = createPopper(this.trigger, this, {\r\n                placement: this.placement,\r\n                modifiers: [\r\n                    maxSize,\r\n                    applyMaxSize,\r\n                    {\r\n                        name: 'arrow',\r\n                        options: {\r\n                            element: this.overlayContentTip,\r\n                        },\r\n                    },\r\n                    {\r\n                        name: 'offset',\r\n                        options: {\r\n                            offset: [0, this.offset],\r\n                        },\r\n                    },\r\n                ],\r\n            });\r\n        }\r\n\r\n        this.state = 'active';\r\n\r\n        document.addEventListener('sp-update-overlays', () => {\r\n            this.updateOverlayPosition();\r\n            this.state = 'visible';\r\n        });\r\n\r\n        this.feature();\r\n        this.updateOverlayPosition()\r\n            .then(() => this.applyContentAnimation('spOverlayFadeIn'))\r\n            .then(() => {\r\n                if (this.receivesFocus) {\r\n                    this.focus();\r\n                }\r\n            });\r\n    }\r\n\r\n    private updateOverlayPopperPlacement(): void {\r\n        /* c8 ignore next */\r\n        if (!this.overlayContent) return;\r\n\r\n        if (this.dataPopperPlacement) {\r\n            // Copy this attribute to the actual overlay node so that it can use\r\n            // the attribute for styling shadow DOM elements based on the side\r\n            // that popper has chosen for it\r\n            this.overlayContent.setAttribute(\r\n                'placement',\r\n                this.dataPopperPlacement\r\n            );\r\n        } else if (this.originalPlacement) {\r\n            this.overlayContent.setAttribute(\r\n                'placement',\r\n                this.originalPlacement\r\n            );\r\n        } else {\r\n            this.overlayContent.removeAttribute('placement');\r\n        }\r\n    }\r\n\r\n    public updated(changedProperties: PropertyValues): void {\r\n        if (changedProperties.has('dataPopperPlacement')) {\r\n            this.updateOverlayPopperPlacement();\r\n        }\r\n    }\r\n\r\n    private open(openDetail: OverlayOpenDetail): void {\r\n        this.extractDetail(openDetail);\r\n    }\r\n\r\n    private extractDetail(detail: OverlayOpenDetail): void {\r\n        this.overlayContent = detail.content;\r\n        this.overlayContentTip = detail.contentTip;\r\n        this.trigger = detail.trigger;\r\n        this.placement = detail.placement;\r\n        this.offset = detail.offset;\r\n        this.interaction = detail.interaction;\r\n        this.color = detail.theme.color;\r\n        this.scale = detail.theme.scale;\r\n        this.receivesFocus = detail.receivesFocus;\r\n    }\r\n\r\n    public dispose(): void {\r\n        /* c8 ignore next */\r\n        if (this.state !== 'dispose') return;\r\n\r\n        /* c8 ignore next 4 */\r\n        if (this.timeout) {\r\n            clearTimeout(this.timeout);\r\n            delete this.timeout;\r\n        }\r\n\r\n        if (this.popper) {\r\n            this.popper.destroy();\r\n            this.popper = undefined;\r\n        }\r\n        this.trigger.removeEventListener(\r\n            'keydown',\r\n            this.handleInlineTriggerKeydown\r\n        );\r\n\r\n        this.returnOverlayContent();\r\n        this.state = 'disposed';\r\n\r\n        if (this.willNotifyClosed) {\r\n            this.overlayContent.dispatchEvent(new Event('sp-overlay-closed'));\r\n            this.willNotifyClosed = false;\r\n        }\r\n    }\r\n\r\n    private stealOverlayContent(element: HTMLElement): void {\r\n        this.originalPlacement = element.getAttribute('placement') as Placement;\r\n        this.restoreContent = reparentChildren([element], this, el => {\r\n            const slotName = el.slot;\r\n            el.removeAttribute('slot');\r\n            return el => {\r\n                el.slot = slotName;\r\n            };\r\n        });\r\n        this.stealOverlayContentResolver();\r\n    }\r\n\r\n    private willNotifyClosed = false;\r\n\r\n    private returnOverlayContent(): void {\r\n        /* c8 ignore next */\r\n        if (!this.restoreContent) return;\r\n\r\n        const [element] = this.restoreContent();\r\n        this.restoreContent = undefined;\r\n        this.willNotifyClosed = true;\r\n\r\n        if (this.originalPlacement) {\r\n            element.setAttribute('placement', this.originalPlacement);\r\n            delete this.originalPlacement;\r\n        }\r\n    }\r\n\r\n    public async updateOverlayPosition(): Promise<void> {\r\n        await (document.fonts ? document.fonts.ready : Promise.resolve());\r\n        if (this.popper) {\r\n            await this.popper.update();\r\n        }\r\n    }\r\n\r\n    public async hide(animated = true): Promise<void> {\r\n        this.state = 'hiding';\r\n        if (animated) {\r\n            await this.applyContentAnimation('spOverlayFadeOut');\r\n        }\r\n        this.state = 'dispose';\r\n    }\r\n\r\n    private schedulePositionUpdate(): void {\r\n        // Edge needs a little time to update the DOM before computing the layout\r\n        cancelAnimationFrame(this.positionAnimationFrame);\r\n        this.positionAnimationFrame = requestAnimationFrame(() =>\r\n            this.updateOverlayPosition()\r\n        );\r\n    }\r\n\r\n    private onSlotChange(): void {\r\n        this.schedulePositionUpdate();\r\n    }\r\n\r\n    public handleInlineTriggerKeydown = (event: KeyboardEvent): void => {\r\n        const { code, shiftKey } = event;\r\n        /* c8 ignore next */\r\n        if (code !== 'Tab') return;\r\n        if (shiftKey) {\r\n            this.tabbingAway = true;\r\n            this.dispatchEvent(new Event('close'));\r\n            return;\r\n        }\r\n\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        this.focus();\r\n    };\r\n\r\n    public connectedCallback(): void {\r\n        super.connectedCallback();\r\n        this.schedulePositionUpdate();\r\n    }\r\n\r\n    public applyContentAnimation(\r\n        animation: ContentAnimation\r\n    ): Promise<boolean> {\r\n        return new Promise((resolve): void => {\r\n            const contents = this.shadowRoot.querySelector(\r\n                '#contents'\r\n            ) as HTMLElement;\r\n            const doneHandler = (event: AnimationEvent): void => {\r\n                if (animation !== event.animationName) return;\r\n                contents.removeEventListener('animationend', doneHandler);\r\n                contents.removeEventListener('animationcancel', doneHandler);\r\n                this.animating = false;\r\n                resolve(event.type === 'animationcancel');\r\n            };\r\n            contents.addEventListener('animationend', doneHandler);\r\n            contents.addEventListener('animationcancel', doneHandler);\r\n\r\n            contents.style.animationName = animation;\r\n            this.animating = true;\r\n        });\r\n    }\r\n\r\n    public renderTheme(content: TemplateResult): TemplateResult {\r\n        const { color, scale } = this;\r\n        return html`\r\n            <cm-theme color=\"${ifDefined(color)}\" scale=\"${ifDefined(scale)}\">\r\n                ${content}\r\n            </cm-theme>\r\n        `;\r\n    }\r\n\r\n    public render(): TemplateResult {\r\n        const content = html`\r\n            <div id=\"contents\">\r\n                <slot @slotchange=\"${this.onSlotChange}\"></slot>\r\n            </div>\r\n        `;\r\n        return this.hasTheme ? this.renderTheme(content) : content;\r\n    }\r\n\r\n    public static create(details: OverlayOpenDetail): ActiveOverlay {\r\n        const overlay = new ActiveOverlay();\r\n\r\n        if (details.content) {\r\n            overlay.open(details);\r\n        }\r\n\r\n        return overlay;\r\n    }\r\n\r\n    private stealOverlayContentPromise = Promise.resolve();\r\n    private stealOverlayContentResolver!: () => void;\r\n\r\n    protected async _getUpdateComplete(): Promise<void> {\r\n        await super._getUpdateComplete();\r\n        await this.stealOverlayContentPromise;\r\n    }\r\n}\r\n"]}