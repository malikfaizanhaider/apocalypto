{"version":3,"file":"overlay-stack.js","sourceRoot":"","sources":["../../../../../src/packages/overlay/src/overlay-stack.ts"],"names":[],"mappings":"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","sourcesContent":["/* Copyright 2021 i2c Inc. All rights reserved. */\r\n\r\nimport { ActiveOverlay } from './ActiveOverlay.js';\r\nimport { OverlayOpenDetail, OverlayOpenCloseDetail } from './overlay-types';\r\nimport { OverlayTimer } from './overlay-timer.js';\r\nimport '../active-overlay.js';\r\n\r\nfunction isLeftClick(event: MouseEvent): boolean {\r\n    return event.button === 0;\r\n}\r\n\r\nfunction hasModifier(event: MouseEvent): boolean {\r\n    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\r\n}\r\n\r\ninterface ManagedOverlayContent {\r\n    open: boolean;\r\n    overlayWillOpenCallback?: (args: { trigger: HTMLElement }) => void;\r\n    overlayOpenCallback?: (args: { trigger: HTMLElement }) => void;\r\n    overlayOpenCancelledCallback?: (args: { trigger: HTMLElement }) => void;\r\n    overlayCloseCallback?: (args: { trigger: HTMLElement }) => void;\r\n}\r\n\r\nexport class OverlayStack {\r\n    public overlays: ActiveOverlay[] = [];\r\n\r\n    private preventMouseRootClose = false;\r\n    private root: HTMLElement = document.body;\r\n    private handlingResize = false;\r\n    private overlayTimer = new OverlayTimer();\r\n\r\n    public constructor() {\r\n        this.addEventListeners();\r\n    }\r\n\r\n    private canTabTrap = true;\r\n    private trappingInited = false;\r\n    private tabTrapper!: HTMLElement;\r\n    private overlayHolder!: HTMLElement;\r\n\r\n    private initTabTrapping(): void {\r\n        /* c8 ignore next 4 */\r\n        if (this.document.body.shadowRoot) {\r\n            this.canTabTrap = false;\r\n            return;\r\n        }\r\n        this.document.body.attachShadow({ mode: 'open' });\r\n        /* c8 ignore next 3 */\r\n        if (!this.document.body.shadowRoot) {\r\n            return;\r\n        }\r\n        const root = this.document.body.shadowRoot as ShadowRoot;\r\n        root.innerHTML = `\r\n            <div id=\"actual\"><slot></slot></div>\r\n            <style>\r\n            #actual {\r\n                position: relative;\r\n                height: calc(100% - var(--swc-body-margins-block, 0px));\r\n                z-index: 0;\r\n                min-height: calc(100vh - var(--swc-body-margins-block, 0px));\r\n            }\r\n            #holder {\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                flex-flow: column;\r\n                height: 100%;\r\n                width: 100%;\r\n                top: 0;\r\n                left: 0;\r\n                position: fixed;\r\n            }\r\n            #holder[hidden] {\r\n                display: none !important;\r\n            }\r\n            #actual[tabindex=\"-1\"] {\r\n                pointer-events: none;  /* just in case? */\r\n            }\r\n            </style>\r\n            <div id=\"holder\" hidden><slot name=\"open\"></slot></div>\r\n        `;\r\n        this.tabTrapper = root.querySelector('#actual') as HTMLElement;\r\n        this.overlayHolder = root.querySelector('#holder') as HTMLElement;\r\n        this.tabTrapper.attachShadow({ mode: 'open' });\r\n        if (this.tabTrapper.shadowRoot) {\r\n            this.tabTrapper.shadowRoot.innerHTML = '<slot></slot>';\r\n        }\r\n    }\r\n\r\n    private startTabTrapping(): void {\r\n        if (!this.trappingInited) {\r\n            this.initTabTrapping();\r\n            this.trappingInited = true;\r\n        }\r\n        /* c8 ignore next 3 */\r\n        if (!this.canTabTrap) {\r\n            return;\r\n        }\r\n        this.tabTrapper.tabIndex = -1;\r\n        this.tabTrapper.setAttribute('aria-hidden', 'true');\r\n        this.overlayHolder.hidden = false;\r\n        requestAnimationFrame(() => {\r\n            const bodyStyles = getComputedStyle(document.body);\r\n            this.tabTrapper.style.setProperty(\r\n                '--swc-body-margins-inline',\r\n                `calc(${bodyStyles.marginLeft} + ${bodyStyles.marginRight})`\r\n            );\r\n            this.tabTrapper.style.setProperty(\r\n                '--swc-body-margins-block',\r\n                `calc(${bodyStyles.marginTop} + ${bodyStyles.marginBottom})`\r\n            );\r\n        });\r\n    }\r\n\r\n    private stopTabTrapping(): void {\r\n        /* c8 ignore next 3 */\r\n        if (!this.canTabTrap || !this.trappingInited) {\r\n            return;\r\n        }\r\n        this.tabTrapper.removeAttribute('tabindex');\r\n        this.tabTrapper.removeAttribute('aria-hidden');\r\n        this.overlayHolder.hidden = true;\r\n    }\r\n\r\n    private get document(): Document {\r\n        return this.root.ownerDocument /* c8 ignore next */ || document;\r\n    }\r\n\r\n    private get topOverlay(): ActiveOverlay | undefined {\r\n        return this.overlays.slice(-1)[0];\r\n    }\r\n\r\n    private findOverlayForContent(\r\n        overlayContent: HTMLElement\r\n    ): ActiveOverlay | undefined {\r\n        for (const item of this.overlays) {\r\n            if (overlayContent === item.overlayContent) {\r\n                return item;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    private addEventListeners(): void {\r\n        this.document.addEventListener('click', this.handleMouseCapture, true);\r\n        this.document.addEventListener('click', this.handleMouse);\r\n        this.document.addEventListener('keyup', this.handleKeyUp);\r\n        window.addEventListener('resize', this.handleResize);\r\n    }\r\n\r\n    private isClickOverlayActiveForTrigger(trigger: HTMLElement): boolean {\r\n        return this.overlays.some(\r\n            item => trigger === item.trigger && item.interaction === 'click'\r\n        );\r\n    }\r\n\r\n    public async openOverlay(details: OverlayOpenDetail): Promise<boolean> {\r\n        if (this.findOverlayForContent(details.content)) {\r\n            return false;\r\n        }\r\n        if (details.notImmediatelyClosable) {\r\n            this._doesNotCloseOnFirstClick = true;\r\n        }\r\n        if (details.interaction === 'modal') {\r\n            this.startTabTrapping();\r\n        }\r\n\r\n        const contentWithLifecycle = (details.content as unknown) as ManagedOverlayContent;\r\n        if (contentWithLifecycle.overlayWillOpenCallback) {\r\n            const { trigger } = details;\r\n            contentWithLifecycle.overlayWillOpenCallback({ trigger });\r\n        }\r\n\r\n        if (details.delayed) {\r\n            const cancelledPromise = this.overlayTimer.openTimer(\r\n                details.content\r\n            );\r\n            const promises = [cancelledPromise];\r\n            if (details.abortPromise) {\r\n                promises.push(details.abortPromise);\r\n            }\r\n            const cancelled = await Promise.race(promises);\r\n            if (cancelled) {\r\n                if (contentWithLifecycle.overlayOpenCancelledCallback) {\r\n                    const { trigger } = details;\r\n                    contentWithLifecycle.overlayOpenCancelledCallback({\r\n                        trigger,\r\n                    });\r\n                }\r\n                return cancelled;\r\n            }\r\n        }\r\n\r\n        if (details.interaction === 'click') {\r\n            this.closeAllHoverOverlays();\r\n        } else if (\r\n            details.interaction === 'hover' &&\r\n            this.isClickOverlayActiveForTrigger(details.trigger)\r\n        ) {\r\n            // Don't show a hover popover if the click popover is already active\r\n            return true;\r\n        }\r\n\r\n        const activeOverlay = ActiveOverlay.create(details);\r\n\r\n        if (this.overlays.length) {\r\n            const topOverlay = this.overlays[this.overlays.length - 1];\r\n            topOverlay.obscure(activeOverlay.interaction);\r\n        }\r\n\r\n        document.body.appendChild(activeOverlay);\r\n\r\n        /**\r\n         * The following work to make the new overlay the \"top\" of the stack\r\n         * has to happen AFTER the current call stack completes in case there\r\n         * is work there in to remove the previous \"top\" overlay.\r\n         */\r\n        return new Promise(res => requestAnimationFrame(res)).then(async () => {\r\n            this.overlays.push(activeOverlay);\r\n            await activeOverlay.updateComplete;\r\n            this.addOverlayEventListeners(activeOverlay);\r\n            if (typeof contentWithLifecycle.open !== 'undefined') {\r\n                contentWithLifecycle.open = true;\r\n            }\r\n            if (contentWithLifecycle.overlayOpenCallback) {\r\n                const { trigger } = activeOverlay;\r\n                contentWithLifecycle.overlayOpenCallback({ trigger });\r\n            }\r\n            if (details.receivesFocus === 'auto') {\r\n                activeOverlay.focus();\r\n            }\r\n            details.trigger.dispatchEvent(\r\n                new CustomEvent<OverlayOpenCloseDetail>('sp-opened', {\r\n                    bubbles: true,\r\n                    composed: true,\r\n                    cancelable: true,\r\n                    detail: {\r\n                        interaction: details.interaction,\r\n                    },\r\n                })\r\n            );\r\n            return false;\r\n        });\r\n    }\r\n\r\n    public addOverlayEventListeners(activeOverlay: ActiveOverlay): void {\r\n        activeOverlay.addEventListener('close', () => {\r\n            this.hideAndCloseOverlay(activeOverlay);\r\n        });\r\n        switch (activeOverlay.interaction) {\r\n            case 'replace':\r\n                this.addReplaceOverlayEventListeners(activeOverlay);\r\n                break;\r\n            case 'inline':\r\n                this.addInlineOverlayEventListeners(activeOverlay);\r\n                break;\r\n        }\r\n    }\r\n\r\n    public addReplaceOverlayEventListeners(activeOverlay: ActiveOverlay): void {\r\n        activeOverlay.addEventListener('keydown', (event: KeyboardEvent) => {\r\n            const { code } = event;\r\n            /* c8 ignore next */\r\n            if (code !== 'Tab') return;\r\n\r\n            event.stopPropagation();\r\n            this.closeOverlay(activeOverlay.overlayContent);\r\n            activeOverlay.tabbingAway = true;\r\n            activeOverlay.trigger.focus();\r\n            activeOverlay.trigger.dispatchEvent(\r\n                new KeyboardEvent('keydown', event)\r\n            );\r\n        });\r\n    }\r\n\r\n    public addInlineOverlayEventListeners(activeOverlay: ActiveOverlay): void {\r\n        activeOverlay.trigger.addEventListener(\r\n            'keydown',\r\n            activeOverlay.handleInlineTriggerKeydown\r\n        );\r\n        activeOverlay.addEventListener('keydown', (event: KeyboardEvent) => {\r\n            const { code, shiftKey } = event;\r\n            /* c8 ignore next */\r\n            if (code !== 'Tab') return;\r\n\r\n            activeOverlay.tabbingAway = true;\r\n            if (shiftKey) {\r\n                const returnFocusElement = document.createElement('span');\r\n                returnFocusElement.tabIndex = -1;\r\n                if (activeOverlay.trigger.hasAttribute('slot')) {\r\n                    returnFocusElement.slot = activeOverlay.trigger.slot;\r\n                }\r\n                activeOverlay.trigger.insertAdjacentElement(\r\n                    'afterend',\r\n                    returnFocusElement\r\n                );\r\n                returnFocusElement.focus();\r\n                returnFocusElement.remove();\r\n                return;\r\n            }\r\n\r\n            event.stopPropagation();\r\n            this.closeOverlay(activeOverlay.overlayContent);\r\n            activeOverlay.trigger.focus();\r\n        });\r\n    }\r\n\r\n    public closeOverlay(content: HTMLElement): void {\r\n        this.overlayTimer.close(content);\r\n        requestAnimationFrame(() => {\r\n            const overlay = this.findOverlayForContent(content);\r\n            this.hideAndCloseOverlay(overlay);\r\n        });\r\n    }\r\n\r\n    private handleMouseCapture = (event: MouseEvent): void => {\r\n        const topOverlay = this.topOverlay;\r\n        if (\r\n            !event.target ||\r\n            !topOverlay ||\r\n            !topOverlay.overlayContent ||\r\n            hasModifier(event) ||\r\n            !isLeftClick(event)\r\n        ) {\r\n            this.preventMouseRootClose = true;\r\n            return;\r\n        }\r\n\r\n        if (event.target instanceof Node) {\r\n            const path = event.composedPath();\r\n            if (path.indexOf(topOverlay.overlayContent) >= 0) {\r\n                this.preventMouseRootClose = true;\r\n                return;\r\n            }\r\n            this.preventMouseRootClose = false;\r\n        }\r\n    };\r\n\r\n    private closeAllHoverOverlays(): void {\r\n        for (const overlay of this.overlays) {\r\n            if (overlay.interaction === 'hover') {\r\n                this.hideAndCloseOverlay(overlay, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private async hideAndCloseOverlay(\r\n        overlay?: ActiveOverlay,\r\n        animated?: boolean\r\n    ): Promise<void> {\r\n        if (overlay) {\r\n            await overlay.hide(animated);\r\n            const contentWithLifecycle = (overlay.overlayContent as unknown) as ManagedOverlayContent;\r\n            if (typeof contentWithLifecycle.open !== 'undefined') {\r\n                contentWithLifecycle.open = false;\r\n            }\r\n            if (contentWithLifecycle.overlayCloseCallback) {\r\n                const { trigger } = overlay;\r\n                contentWithLifecycle.overlayCloseCallback({ trigger });\r\n            }\r\n            if (overlay.state != 'dispose') return;\r\n\r\n            const index = this.overlays.indexOf(overlay);\r\n            if (index >= 0) {\r\n                this.overlays.splice(index, 1);\r\n            }\r\n            if (this.overlays.length) {\r\n                const topOverlay = this.overlays[this.overlays.length - 1];\r\n                topOverlay.feature();\r\n                if (\r\n                    topOverlay.interaction === 'modal' ||\r\n                    topOverlay.hasModalRoot\r\n                ) {\r\n                    topOverlay.focus();\r\n                } else {\r\n                    this.stopTabTrapping();\r\n                }\r\n            } else {\r\n                this.stopTabTrapping();\r\n                if (\r\n                    overlay.interaction === 'modal' ||\r\n                    ((overlay.interaction === 'replace' ||\r\n                        overlay.interaction === 'inline') &&\r\n                        !overlay.tabbingAway)\r\n                ) {\r\n                    const overlayRoot = overlay.overlayContent.getRootNode() as ShadowRoot;\r\n                    const overlayContentActiveElement =\r\n                        overlayRoot.activeElement;\r\n                    const triggerRoot = overlay.trigger.getRootNode() as ShadowRoot;\r\n                    const triggerActiveElement = triggerRoot.activeElement;\r\n                    if (\r\n                        overlay.overlayContent.contains(\r\n                            overlayContentActiveElement\r\n                        ) ||\r\n                        overlay.trigger\r\n                            .getRootNode()\r\n                            .contains(triggerActiveElement) ||\r\n                        (triggerRoot.host &&\r\n                            triggerRoot.host === triggerActiveElement)\r\n                    ) {\r\n                        overlay.trigger.focus();\r\n                    }\r\n                }\r\n                overlay.tabbingAway = false;\r\n            }\r\n\r\n            overlay.remove();\r\n            overlay.dispose();\r\n\r\n            overlay.trigger.dispatchEvent(\r\n                new CustomEvent<OverlayOpenCloseDetail>('sp-closed', {\r\n                    bubbles: true,\r\n                    composed: true,\r\n                    cancelable: true,\r\n                    detail: {\r\n                        interaction: overlay.interaction,\r\n                    },\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    private closeTopOverlay(): Promise<void> {\r\n        return this.hideAndCloseOverlay(this.topOverlay);\r\n    }\r\n\r\n    /**\r\n     * A \"longpress\" occurs before the \"click\" that creates it has occured.\r\n     * In that way the first click will still be part of the \"longpress\" and\r\n     * not part of closing the overlay.\r\n     */\r\n    private _doesNotCloseOnFirstClick = false;\r\n\r\n    private handleMouse = (event: Event): void => {\r\n        if (this._doesNotCloseOnFirstClick) {\r\n            this._doesNotCloseOnFirstClick = false;\r\n            return;\r\n        }\r\n        if (this.preventMouseRootClose || event.defaultPrevented) {\r\n            return;\r\n        }\r\n        this.closeTopOverlay();\r\n    };\r\n\r\n    private handleKeyUp = (event: KeyboardEvent): void => {\r\n        if (event.code === 'Escape') {\r\n            const overlay = this.topOverlay as ActiveOverlay;\r\n            this.closeTopOverlay();\r\n            overlay && overlay.trigger.focus();\r\n        }\r\n    };\r\n\r\n    private handleResize = (): void => {\r\n        if (this.handlingResize) return;\r\n\r\n        this.handlingResize = true;\r\n        requestAnimationFrame(async () => {\r\n            const promises = this.overlays.map(overlay =>\r\n                overlay.updateOverlayPosition()\r\n            );\r\n            await Promise.all(promises);\r\n            this.handlingResize = false;\r\n        });\r\n    };\r\n}\r\n"]}