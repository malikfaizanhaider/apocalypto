{"version":3,"file":"Base.js","sourceRoot":"","sources":["Base.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\nCopyright 2020 Adobe. All rights reserved.\r\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License. You may obtain a copy\r\nof the License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software distributed under\r\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\nOF ANY KIND, either express or implied. See the License for the specific language\r\ngoverning permissions and limitations under the License.\r\n*/\r\n\r\nimport { LitElement, property, UpdatingElement } from 'lit-element';\r\ntype ThemeRoot = HTMLElement & {\r\n    startManagingContentDirection: (el: HTMLElement) => void;\r\n    stopManagingContentDirection: (el: HTMLElement) => void;\r\n};\r\n\r\ntype Constructor<T = Record<string, unknown>> = {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    new (...args: any[]): T;\r\n    prototype: T;\r\n};\r\n\r\nexport interface SpectrumInterface {\r\n    shadowRoot: ShadowRoot;\r\n    isLTR: boolean;\r\n    dir: 'ltr' | 'rtl';\r\n}\r\n\r\nconst observedForElements: Set<HTMLElement> = new Set();\r\n\r\nconst updateRTL = (): void => {\r\n    const dir =\r\n        document.documentElement.dir === 'rtl'\r\n            ? document.documentElement.dir\r\n            : 'ltr';\r\n    observedForElements.forEach((el) => {\r\n        el.setAttribute('dir', dir);\r\n    });\r\n};\r\n\r\nconst rtlObserver = new MutationObserver(updateRTL);\r\n\r\nrtlObserver.observe(document.documentElement, {\r\n    attributes: true,\r\n    attributeFilter: ['dir'],\r\n});\r\n\r\ntype ContentDirectionManager = HTMLElement & {\r\n    startManagingContentDirection?(): void;\r\n};\r\n\r\nconst canManageContentDirection = (el: ContentDirectionManager): boolean =>\r\n    typeof el.startManagingContentDirection !== 'undefined' ||\r\n    el.tagName === 'SP-THEME';\r\n\r\nexport function SpectrumMixin<T extends Constructor<UpdatingElement>>(\r\n    constructor: T\r\n): T & Constructor<SpectrumInterface> {\r\n    class SlotTextObservingElement extends constructor {\r\n        /**\r\n         * @private\r\n         */\r\n        public shadowRoot!: ShadowRoot;\r\n        private _dirParent?: HTMLElement;\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        @property({ reflect: true })\r\n        public dir: 'ltr' | 'rtl' = 'ltr';\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        public get isLTR(): boolean {\r\n            return this.dir === 'ltr';\r\n        }\r\n\r\n        public connectedCallback(): void {\r\n            if (!this.hasAttribute('dir')) {\r\n                let dirParent = ((this as HTMLElement).assignedSlot ||\r\n                    this.parentNode) as HTMLElement;\r\n                while (\r\n                    dirParent !== document.documentElement &&\r\n                    !canManageContentDirection(\r\n                        dirParent as ContentDirectionManager\r\n                    )\r\n                ) {\r\n                    dirParent = ((dirParent as HTMLElement).assignedSlot || // step into the shadow DOM of the parent of a slotted node\r\n                        dirParent.parentNode || // DOM Element detected\r\n                        ((dirParent as unknown) as ShadowRoot)\r\n                            .host) as HTMLElement;\r\n                }\r\n                this.dir =\r\n                    dirParent.dir === 'rtl' ? dirParent.dir : this.dir || 'ltr';\r\n                if (dirParent === document.documentElement) {\r\n                    observedForElements.add(this);\r\n                } else {\r\n                    const { localName } = dirParent;\r\n                    if (\r\n                        localName.search('-') > -1 &&\r\n                        !customElements.get(localName)\r\n                    ) {\r\n                        customElements.whenDefined(localName).then(() => {\r\n                            (dirParent as ThemeRoot).startManagingContentDirection(\r\n                                this\r\n                            );\r\n                        });\r\n                    } else {\r\n                        (dirParent as ThemeRoot).startManagingContentDirection(\r\n                            this\r\n                        );\r\n                    }\r\n                }\r\n                this._dirParent = dirParent as HTMLElement;\r\n            }\r\n            super.connectedCallback();\r\n        }\r\n\r\n        public disconnectedCallback(): void {\r\n            super.disconnectedCallback();\r\n            if (this._dirParent) {\r\n                if (this._dirParent === document.documentElement) {\r\n                    observedForElements.delete(this);\r\n                } else {\r\n                    (this._dirParent as ThemeRoot).stopManagingContentDirection(\r\n                        this\r\n                    );\r\n                }\r\n                this.removeAttribute('dir');\r\n            }\r\n        }\r\n    }\r\n    return SlotTextObservingElement;\r\n}\r\n\r\nexport class SpectrumElement extends SpectrumMixin(LitElement) {}\r\n"]}