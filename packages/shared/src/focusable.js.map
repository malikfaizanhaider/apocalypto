{"version":3,"file":"focusable.js","sourceRoot":"","sources":["../../../../../src/packages/shared/src/focusable.ts"],"names":[],"mappings":"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","sourcesContent":["/* Copyright 2021 i2c Inc. All rights reserved. */\r\n\r\nimport {\r\n    SpectrumElement,\r\n    property,\r\n    PropertyValues,\r\n} from '../../base/src/index.js';\r\n\r\nimport { FocusVisiblePolyfillMixin } from './focus-visible.js';\r\n\r\ntype DisableableElement = HTMLElement & { disabled?: boolean };\r\n\r\n/**\r\n * Focusable base class handles tabindex setting into shadowed elements automatically.\r\n */\r\nexport class Focusable extends FocusVisiblePolyfillMixin(SpectrumElement) {\r\n    /**\r\n     * Disable this control. It will not receive focus or events\r\n     */\r\n    @property({ type: Boolean, reflect: true })\r\n    public disabled = false;\r\n\r\n    /**\r\n     * When this control is rendered, focus it automatically\r\n     * @private\r\n     */\r\n    @property({ type: Boolean })\r\n    public autofocus = false;\r\n\r\n    /**\r\n     * The tab index to apply to this control. See general documentation about\r\n     * the tabindex HTML property\r\n     *\r\n     * @private\r\n     */\r\n    @property({ type: Number })\r\n    public get tabIndex(): number {\r\n        if (this.focusElement === this) {\r\n            const tabindex = this.hasAttribute('tabindex')\r\n                ? Number(this.getAttribute('tabindex'))\r\n                : NaN;\r\n            return !isNaN(tabindex) ? tabindex : -1;\r\n        }\r\n        const tabIndexAttribute = parseFloat(\r\n            this.hasAttribute('tabindex')\r\n                ? (this.getAttribute('tabindex') as string) || '0'\r\n                : '0'\r\n        );\r\n        // When `disabled` tabindex is -1.\r\n        // When host tabindex -1, use that as the cache.\r\n        if (this.disabled || tabIndexAttribute < 0) {\r\n            return -1;\r\n        }\r\n        // When `focusElement` isn't available yet,\r\n        // use host tabindex as the cache.\r\n        if (!this.focusElement) {\r\n            return tabIndexAttribute;\r\n        }\r\n        // All other times, use the tabindex of `focusElement`\r\n        // as the cache for this value.\r\n        return this.focusElement.tabIndex;\r\n    }\r\n    public set tabIndex(tabIndex: number) {\r\n        // Flipping `manipulatingTabindex` to true before a change\r\n        // allows for that change NOT to effect the cached value of tabindex\r\n        if (this.manipulatingTabindex) {\r\n            this.manipulatingTabindex = false;\r\n            return;\r\n        }\r\n        if (this.focusElement === this) {\r\n            if (tabIndex !== this.tabIndex) {\r\n                this._tabIndex = tabIndex;\r\n                const tabindex = this.disabled ? '-1' : '' + tabIndex;\r\n                this.setAttribute('tabindex', tabindex);\r\n            }\r\n            return;\r\n        }\r\n        if (tabIndex === -1) {\r\n            this.addEventListener(\r\n                'pointerdown',\r\n                this.onPointerdownManagementOfTabIndex\r\n            );\r\n        } else {\r\n            // All code paths are about to address the host tabindex without side effect.\r\n            this.manipulatingTabindex = true;\r\n            this.removeEventListener(\r\n                'pointerdown',\r\n                this.onPointerdownManagementOfTabIndex\r\n            );\r\n        }\r\n        if (tabIndex === -1 || this.disabled) {\r\n            // Do not cange the tabindex of `focusElement` as it is the \"old\" value cache.\r\n            // Make element NOT focusable.\r\n            this.setAttribute('tabindex', '-1');\r\n            this.removeAttribute('focusable');\r\n            if (tabIndex !== -1) {\r\n                // Cache all NON-`-1` values on the `focusElement`.\r\n                this.manageFocusElementTabindex(tabIndex);\r\n            }\r\n            return;\r\n        }\r\n        this.setAttribute('focusable', '');\r\n        if (this.hasAttribute('tabindex')) {\r\n            this.removeAttribute('tabindex');\r\n        } else {\r\n            // You can't remove an attribute that isn't there,\r\n            // manually end the `manipulatingTabindex` guard.\r\n            this.manipulatingTabindex = false;\r\n        }\r\n        this.manageFocusElementTabindex(tabIndex);\r\n    }\r\n    private _tabIndex = 0;\r\n\r\n    private onPointerdownManagementOfTabIndex(): void {\r\n        if (this.tabIndex === -1) {\r\n            this.tabIndex = 0;\r\n            this.focus({ preventScroll: true });\r\n        }\r\n    }\r\n\r\n    private async manageFocusElementTabindex(tabIndex: number): Promise<void> {\r\n        if (!this.focusElement) {\r\n            // allow setting these values to be async when needed.\r\n            await this.updateComplete;\r\n        }\r\n        if (tabIndex === null) {\r\n            this.focusElement.removeAttribute('tabindex');\r\n        } else {\r\n            this.focusElement.tabIndex = tabIndex;\r\n        }\r\n    }\r\n\r\n    private manipulatingTabindex = false;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    public get focusElement(): DisableableElement {\r\n        throw new Error('Must implement focusElement getter!');\r\n    }\r\n\r\n    public focus(options?: FocusOptions): void {\r\n        if (this.disabled || !this.focusElement) {\r\n            return;\r\n        }\r\n\r\n        if (this.focusElement !== this) {\r\n            this.focusElement.focus(options);\r\n        } else {\r\n            HTMLElement.prototype.focus.apply(this, [options]);\r\n        }\r\n    }\r\n\r\n    public blur(): void {\r\n        if (this.focusElement !== this) {\r\n            this.focusElement.blur();\r\n        } else {\r\n            HTMLElement.prototype.blur.apply(this);\r\n        }\r\n    }\r\n\r\n    public click(): void {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n\r\n        if (this.focusElement !== this) {\r\n            this.focusElement.click();\r\n        } else {\r\n            HTMLElement.prototype.click.apply(this);\r\n        }\r\n    }\r\n\r\n    protected manageAutoFocus(): void {\r\n        if (this.autofocus) {\r\n            /**\r\n             * Trick :focus-visible polyfill into thinking keyboard based focus\r\n             *\r\n             * @private\r\n             **/\r\n            this.dispatchEvent(\r\n                new KeyboardEvent('keydown', {\r\n                    code: 'Tab',\r\n                })\r\n            );\r\n            this.focusElement.focus();\r\n        }\r\n    }\r\n\r\n    protected firstUpdated(changes: PropertyValues): void {\r\n        super.firstUpdated(changes);\r\n        this.manageAutoFocus();\r\n        if (\r\n            !this.hasAttribute('tabindex') ||\r\n            this.getAttribute('tabindex') !== '-1'\r\n        ) {\r\n            this.setAttribute('focusable', '');\r\n        }\r\n    }\r\n\r\n    protected update(changedProperties: PropertyValues): void {\r\n        if (changedProperties.has('disabled')) {\r\n            this.handleDisabledChanged(\r\n                this.disabled,\r\n                changedProperties.get('disabled') as boolean\r\n            );\r\n        }\r\n\r\n        super.update(changedProperties);\r\n    }\r\n\r\n    protected updated(changedProperties: PropertyValues): void {\r\n        super.updated(changedProperties);\r\n\r\n        if (changedProperties.has('disabled') && this.disabled) {\r\n            this.blur();\r\n        }\r\n    }\r\n\r\n    private async handleDisabledChanged(\r\n        disabled: boolean,\r\n        oldDisabled: boolean\r\n    ): Promise<void> {\r\n        const canSetDisabled = (): boolean =>\r\n            this.focusElement !== this &&\r\n            typeof this.focusElement.disabled !== 'undefined';\r\n        if (disabled) {\r\n            this.manipulatingTabindex = true;\r\n            this.setAttribute('tabindex', '-1');\r\n            await this.updateComplete;\r\n            if (canSetDisabled()) {\r\n                this.focusElement.disabled = true;\r\n            } else {\r\n                this.setAttribute('aria-disabled', 'true');\r\n            }\r\n        } else if (oldDisabled) {\r\n            this.manipulatingTabindex = true;\r\n            if (this.focusElement === this) {\r\n                this.setAttribute('tabindex', '' + this._tabIndex);\r\n            } else {\r\n                this.removeAttribute('tabindex');\r\n            }\r\n            await this.updateComplete;\r\n            if (canSetDisabled()) {\r\n                this.focusElement.disabled = false;\r\n            } else {\r\n                this.removeAttribute('aria-disabled');\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}