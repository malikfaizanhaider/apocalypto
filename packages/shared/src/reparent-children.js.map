{"version":3,"file":"reparent-children.js","sourceRoot":"","sources":["../../../../../src/packages/shared/src/reparent-children.ts"],"names":[],"mappings":"AAAA,kDAAkD;AAClD,SAAS,eAAe,CACpB,gBAA2B,EAC3B,WAAgB,EAChB,mBAAwC,EAAE;IAE1C,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,WAAW,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE;QACrD,MAAM,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;QACtC,MAAM,eAAe,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAChD,MAAM,aAAa,GACf,eAAe,CAAC,aAAa,IAAI,eAAe,CAAC,WAAW,EAAE,CAAC;QACnE,IAAI,gBAAgB,CAAC,KAAK,CAAC,EAAE;YACzB,gBAAgB,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC;SACvC;QACD,aAAa,CAAC,YAAY,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;QACxD,OAAO,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAClC;IACD,OAAO,WAAW,CAAC;AACvB,CAAC;AAED,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAC5B,WAAgB,EAChB,SAAkB,EAClB,eAAqD,EACpC,EAAE;IACnB,MAAM,gBAAgB,GAAc,EAAE,CAAC;IACvC,MAAM,gBAAgB,GAAwB,EAAE,CAAC;IAEjD,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,WAAW,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE;QACrD,MAAM,eAAe,GAAY,QAAQ,CAAC,aAAa,CACnD,oCAAoC,CACvC,CAAC;QACF,gBAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAEvC,MAAM,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,eAAe,EAAE;YACjB,gBAAgB,CAAC,IAAI,CACjB,eAAe,CAAC,UAAU,CAAC;gBACvB,CAAC,GAAG,EAAE;oBACF,OAAO;gBACX,CAAC,CAAC,CACT,CAAC;SACL;QACD,MAAM,aAAa,GACf,UAAU,CAAC,aAAa,IAAI,UAAU,CAAC,WAAW,EAAE,CAAC;QACzD,aAAa,CAAC,YAAY,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;QACxD,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;KAChC;IAED,OAAO;QACH,OAAO,eAAe,CAClB,gBAAgB,EAChB,WAAW,EACX,gBAAgB,CACnB,CAAC;IACN,CAAC,CAAC;AACN,CAAC,CAAC","sourcesContent":["/* Copyright 2021 i2c Inc. All rights reserved. */\r\nfunction restoreChildren<T extends Element>(\r\n    placeholderItems: Comment[],\r\n    srcElements: T[],\r\n    cleanupCallbacks: ((el: T) => void)[] = []\r\n): T[] {\r\n    for (let index = 0; index < srcElements.length; ++index) {\r\n        const srcElement = srcElements[index];\r\n        const placeholderItem = placeholderItems[index];\r\n        const parentElement =\r\n            placeholderItem.parentElement || placeholderItem.getRootNode();\r\n        if (cleanupCallbacks[index]) {\r\n            cleanupCallbacks[index](srcElement);\r\n        }\r\n        parentElement.replaceChild(srcElement, placeholderItem);\r\n        delete placeholderItems[index];\r\n    }\r\n    return srcElements;\r\n}\r\n\r\nexport const reparentChildren = <T extends Element>(\r\n    srcElements: T[],\r\n    newParent: Element,\r\n    prepareCallback?: (el: T) => ((el: T) => void) | void\r\n): (() => Element[]) => {\r\n    const placeholderItems: Comment[] = [];\r\n    const cleanupCallbacks: ((el: T) => void)[] = [];\r\n\r\n    for (let index = 0; index < srcElements.length; ++index) {\r\n        const placeholderItem: Comment = document.createComment(\r\n            'placeholder for reparented element'\r\n        );\r\n        placeholderItems.push(placeholderItem);\r\n\r\n        const srcElement = srcElements[index];\r\n        if (prepareCallback) {\r\n            cleanupCallbacks.push(\r\n                prepareCallback(srcElement) ||\r\n                    (() => {\r\n                        return;\r\n                    })\r\n            );\r\n        }\r\n        const parentElement =\r\n            srcElement.parentElement || srcElement.getRootNode();\r\n        parentElement.replaceChild(placeholderItem, srcElement);\r\n        newParent.append(srcElement);\r\n    }\r\n\r\n    return function (): Element[] {\r\n        return restoreChildren<T>(\r\n            placeholderItems,\r\n            srcElements,\r\n            cleanupCallbacks\r\n        );\r\n    };\r\n};\r\n"]}