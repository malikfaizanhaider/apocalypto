{"version":3,"file":"Theme.js","sourceRoot":"","sources":["../../../../../src/packages/theme/src/Theme.ts"],"names":[],"mappings":"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","sourcesContent":["/* Copyright 2021 i2c Inc. All rights reserved. */\n\nimport { CSSResult, supportsAdoptingStyleSheets } from 'lit-element';\n\nimport coreStyles from './theme.css.js';\n\ndeclare global {\n    interface Window {\n        ShadyCSS: {\n            nativeShadow: boolean;\n            prepareTemplate(\n                template: HTMLTemplateElement,\n                elementName: string,\n                typeExtension?: string\n            ): void;\n            styleElement(host: HTMLElement): void;\n            ScopingShim: {\n                prepareAdoptedCssText(\n                    cssTextArray: string[],\n                    elementName: string\n                ): void;\n            };\n        };\n    }\n    interface ShadowRoot {\n        adoptedStyleSheets?: CSSStyleSheet[];\n    }\n}\n\ntype FragmentType = 'color' | 'scale' | 'core';\ntype SettableFragmentTypes = 'color' | 'scale';\ntype FragmentMap = Map<string, { name: string; styles: CSSResult }>;\nexport type ThemeFragmentMap = Map<FragmentType, FragmentMap>;\nexport type Color = 'light' | 'lightest' | 'dark' | 'darkest';\nexport type Scale = 'medium' | 'large';\nconst ScaleValues = ['medium', 'large'];\nconst ColorValues = ['light', 'lightest', 'dark', 'darkest'];\ntype FragmentName = Color | Scale | 'core';\n\nexport interface ThemeData {\n    color?: Color;\n    scale?: Scale;\n}\n\ntype ThemeKindProvider = {\n    [P in SettableFragmentTypes]: Color | Scale | '';\n};\n\nexport class Theme extends HTMLElement implements ThemeKindProvider {\n    private hasAdoptedStyles = false;\n    private static themeFragmentsByKind: ThemeFragmentMap = new Map();\n    private static defaultFragments: Set<FragmentName> = new Set(['core']);\n    private static templateElement?: HTMLTemplateElement;\n    private static instances: Set<Theme> = new Set();\n\n    static get observedAttributes(): string[] {\n        return ['color', 'scale'];\n    }\n\n    protected attributeChangedCallback(\n        attrName: SettableFragmentTypes,\n        old: string | null,\n        value: string | null\n    ): void {\n        if (old === value) {\n            return;\n        }\n        if (attrName === 'color') {\n            this.color = value as Color;\n        } else if (attrName === 'scale') {\n            this.scale = value as Scale;\n        }\n    }\n\n    private requestUpdate(): void {\n        this.hasAdoptedStyles = false;\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.styleElement(this);\n        } else {\n            this.shouldAdoptStyles();\n        }\n    }\n\n    public shadowRoot!: ShadowRoot;\n\n    get core(): 'core' {\n        return 'core';\n    }\n\n    private _color: Color | '' = '';\n\n    get color(): Color | '' {\n        const themeFragments = Theme.themeFragmentsByKind.get('color');\n        const { name } =\n            (themeFragments && themeFragments.get('default')) || {};\n        return this._color || (name as Color) || '';\n    }\n\n    set color(newValue: Color | '') {\n        if (newValue === this._color) return;\n        const color =\n            !!newValue && ColorValues.includes(newValue)\n                ? newValue\n                : this.color;\n        if (color !== this._color) {\n            this._color = color;\n            this.requestUpdate();\n        }\n        if (color) {\n            this.setAttribute('color', color);\n        } else {\n            this.removeAttribute('color');\n        }\n    }\n\n    private _scale: Scale | '' = '';\n\n    get scale(): Scale | '' {\n        const themeFragments = Theme.themeFragmentsByKind.get('scale');\n        const { name } =\n            (themeFragments && themeFragments.get('default')) || {};\n        return this._scale || (name as Scale) || '';\n    }\n\n    set scale(newValue: Scale | '') {\n        if (newValue === this._scale) return;\n        const scale =\n            !!newValue && ScaleValues.includes(newValue)\n                ? newValue\n                : this.scale;\n        if (scale !== this._scale) {\n            this._scale = scale;\n            this.requestUpdate();\n        }\n        if (scale) {\n            this.setAttribute('scale', scale);\n        } else {\n            this.removeAttribute('scale');\n        }\n    }\n\n    private get styles(): CSSResult[] {\n        const themeKinds: FragmentType[] = [\n            ...Theme.themeFragmentsByKind.keys(),\n        ];\n        const styles = themeKinds.reduce((acc, kind) => {\n            const kindFragments = Theme.themeFragmentsByKind.get(\n                kind\n            ) as FragmentMap;\n            const { [kind]: name } = this;\n            const currentStyles = kindFragments.get(name);\n            if (currentStyles) {\n                acc.push(currentStyles.styles);\n            }\n            return acc;\n        }, [] as CSSResult[]);\n        return [...styles];\n    }\n\n    private static get template(): HTMLTemplateElement {\n        if (!this.templateElement) {\n            this.templateElement = document.createElement('template');\n            this.templateElement.innerHTML = '<slot></slot>';\n        }\n        return this.templateElement;\n    }\n\n    constructor() {\n        super();\n        this.attachShadow({ mode: 'open' });\n        const node = document.importNode(Theme.template.content, true);\n        this.shadowRoot.appendChild(node);\n        this.shouldAdoptStyles();\n        this.addEventListener(\n            'cm-query-theme',\n            this.onQueryTheme as EventListener\n        );\n    }\n\n    private onQueryTheme(event: CustomEvent<ThemeData>): void {\n        if (event.defaultPrevented) {\n            return;\n        }\n        event.preventDefault();\n        const { detail: theme } = event;\n        theme.color = this.color || undefined;\n        theme.scale = this.scale || undefined;\n    }\n\n    protected connectedCallback(): void {\n        this.shouldAdoptStyles();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        /* c8 ignore next 3 */\n        if (window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n        // Add `this` to the instances array.\n        Theme.instances.add(this);\n        const manageDir = (): void => {\n            const { dir } = this;\n            this.trackedChildren.forEach(el => {\n                el.setAttribute('dir', dir === 'rtl' ? dir : 'ltr');\n            });\n        };\n        if (!this.observer) {\n            this.observer = new MutationObserver(manageDir);\n        }\n        this.observer.observe(this, {\n            attributes: true,\n            attributeFilter: ['dir'],\n        });\n        if (!this.hasAttribute('dir')) {\n            let dirParent = ((this as HTMLElement).assignedSlot ||\n                this.parentNode) as HTMLElement | DocumentFragment | ShadowRoot;\n            while (\n                dirParent !== document.documentElement &&\n                !(dirParent instanceof Theme)\n            ) {\n                dirParent = ((dirParent as HTMLElement).assignedSlot || // step into the shadow DOM of the parent of a slotted node\n                    dirParent.parentNode || // DOM Element detected\n                    (dirParent as ShadowRoot).host) as\n                    | HTMLElement\n                    | DocumentFragment\n                    | ShadowRoot;\n            }\n            this.dir = dirParent.dir === 'rtl' ? dirParent.dir : 'ltr';\n        }\n        requestAnimationFrame(() => manageDir());\n    }\n\n    protected disconnectedCallback(): void {\n        // Remove `this` to the instances array.\n        Theme.instances.delete(this);\n        this.observer.disconnect();\n    }\n\n    private observer!: MutationObserver;\n\n    public startManagingContentDirection(el: HTMLElement): void {\n        this.trackedChildren.add(el);\n    }\n\n    public stopManagingContentDirection(el: HTMLElement): void {\n        this.trackedChildren.delete(el);\n    }\n\n    private trackedChildren: Set<HTMLElement> = new Set();\n\n    private shouldAdoptStyles(): void {\n        /* c8 ignore next 3 */\n        if (!this.hasAdoptedStyles) {\n            this.adoptStyles();\n        }\n    }\n\n    private get expectedFragments(): number {\n        // color, scale and core\n        return 3;\n    }\n\n    protected adoptStyles(): void {\n        const styles = this.styles; // No test coverage on Edge\n        if (styles.length < this.expectedFragments) return;\n\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it.\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        /* c8 ignore next */ if (\n            window.ShadyCSS !== undefined &&\n            !window.ShadyCSS.nativeShadow &&\n            window.ShadyCSS.ScopingShim\n        ) {\n            // For browsers using the shim, there seems to be one set of\n            // processed styles per template, so it is hard to nest styles. So,\n            // for those, we load in all style fragments and then switch using a\n            // host selector (e.g. :host([color='dark']))\n            const fragmentCSS: string[] = [];\n            for (const [kind, fragments] of Theme.themeFragmentsByKind) {\n                for (const [name, { styles }] of fragments) {\n                    if (name === 'default') continue;\n                    let cssText = styles.cssText;\n                    if (!Theme.defaultFragments.has(name as FragmentName)) {\n                        cssText = cssText.replace(\n                            ':host',\n                            `:host([${kind}='${name}'])`\n                        );\n                    }\n                    fragmentCSS.push(cssText);\n                }\n            }\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(\n                fragmentCSS,\n                this.localName\n            );\n            window.ShadyCSS.prepareTemplate(Theme.template, this.localName);\n        } else if (supportsAdoptingStyleSheets) {\n            const styleSheets: CSSStyleSheet[] = [];\n            for (const style of styles) {\n                styleSheets.push(style.styleSheet as CSSStyleSheet);\n            }\n            this.shadowRoot.adoptedStyleSheets = styleSheets;\n        } else {\n            const styleNodes = this.shadowRoot.querySelectorAll('style');\n            styleNodes.forEach(element => element.remove());\n            styles.forEach(s => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.shadowRoot.appendChild(style);\n            });\n        }\n        this.hasAdoptedStyles = true;\n    }\n\n    static registerThemeFragment(\n        name: FragmentName,\n        kind: FragmentType,\n        styles: CSSResult\n    ): void {\n        const fragmentMap = Theme.themeFragmentsByKind.get(kind) || new Map();\n        if (fragmentMap.size === 0) {\n            Theme.themeFragmentsByKind.set(kind, fragmentMap);\n            // we're adding our first fragment for this kind, set as default\n            fragmentMap.set('default', { name, styles });\n            Theme.defaultFragments.add(name);\n        }\n        fragmentMap.set(name, { name, styles });\n        Theme.instances.forEach(instance => instance.shouldAdoptStyles());\n    }\n}\n\nTheme.registerThemeFragment('core', 'core', coreStyles);\n"]}