{"version":3,"file":"Toast.js","sourceRoot":"","sources":["../../../../../src/packages/toast/src/Toast.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    html,\n    CSSResultArray,\n    TemplateResult,\n    SpectrumElement,\n    property,\n    PropertyValues,\n} from '../../base/src/index';\n\nimport '../../button/sp-clear-button.js';\n\nimport toastStyles from './toast.css.js';\n\nexport const toastVariants: ToastVariants[] = [\n    'negative',\n    'positive',\n    'info',\n    'error',\n    'warning',\n];\n\nexport type ToastVariants =\n    | 'negative'\n    | 'positive'\n    | 'info'\n    | 'error'\n    | 'warning'\n    | '';\n\n/**\n * @slot - The toast content\n */\n\nexport class Toast extends SpectrumElement {\n    public static get styles(): CSSResultArray {\n        return [toastStyles];\n    }\n\n    @property({ type: Boolean, reflect: true })\n    public open = false;\n\n    @property({ type: Number })\n    public set timeout(timeout: number | null) {\n        const hasTimeout = typeof timeout !== null && (timeout as number) > 0;\n        const newTimeout = hasTimeout\n            ? Math.max(6000, timeout as number)\n            : null;\n        const oldValue = this.timeout;\n        if (newTimeout && this.countdownStart) {\n            this.countdownStart = performance.now();\n        }\n        this._timeout = newTimeout;\n        this.requestUpdate('timeout', oldValue);\n    }\n\n    public get timeout(): number | null {\n        return this._timeout;\n    }\n\n    public _timeout: number | null = null;\n\n    /**\n     * The variant applies specific styling when set to `negative`, `positive`, `info`, `error`, or `warning`.\n     * `variant` attribute is removed when not matching one of the above.\n     *\n     * @param {String} variant\n     */\n    @property({ type: String })\n    public set variant(variant: ToastVariants) {\n        if (variant === this.variant) {\n            return;\n        }\n        const oldValue = this.variant;\n        if (toastVariants.includes(variant)) {\n            this.setAttribute('variant', variant);\n            this._variant = variant;\n        } else {\n            this.removeAttribute('variant');\n            this._variant = '';\n        }\n        this.requestUpdate('variant', oldValue);\n    }\n\n    public get variant(): ToastVariants {\n        return this._variant;\n    }\n\n    private _variant: ToastVariants = '';\n\n    private renderIcon(variant: string): TemplateResult {\n        switch (variant) {\n            case 'info':\n                return html`\n                    <iron-icon\n                        icon=\"vaadin:info-circle\"\n                        label=\"info\"\n                        class=\"type\"\n                    ></iron-icon>\n                `;\n            case 'negative':\n            case 'error': // deprecated\n            case 'warning': // deprecated\n                return html`\n                    <iron-icon\n                        icon=\"vaadin:warning\"\n                        label=\"Error\"\n                        class=\"type\"\n                    ></iron-icon>\n                `;\n            case 'positive':\n            case 'success': // deprecated\n                return html`\n                    <iron-icon\n                        icon=\"vaadin:check-circle-o\"\n                        label=\"Success\"\n                        class=\"type\"\n                    ></iron-icon>\n                `;\n            default:\n                return html``;\n        }\n    }\n\n    private countdownStart = 0;\n    private nextCount = -1;\n\n    private doCountdown = (time: number): void => {\n        if (!this.countdownStart) {\n            this.countdownStart = performance.now();\n        }\n        if (time - this.countdownStart > (this._timeout as number)) {\n            this.open = false;\n            this.countdownStart = 0;\n        } else {\n            this.countdown();\n        }\n    };\n\n    private countdown = (): void => {\n        cancelAnimationFrame(this.nextCount);\n        this.nextCount = requestAnimationFrame(this.doCountdown);\n    };\n\n    private holdCountdown = (): void => {\n        this.stopCountdown();\n        this.addEventListener('focusout', this.resumeCountdown);\n    };\n\n    private resumeCountdown = (): void => {\n        this.removeEventListener('focusout', this.holdCountdown);\n        this.countdown();\n    };\n\n    private startCountdown(): void {\n        this.countdown();\n        this.addEventListener('focusin', this.holdCountdown);\n    }\n\n    private stopCountdown(): void {\n        cancelAnimationFrame(this.nextCount);\n        this.countdownStart = 0;\n    }\n\n    public close(): void {\n        this.open = false;\n    }\n\n    protected render(): TemplateResult {\n        return html`\n            ${this.renderIcon(this.variant)}\n            <div class=\"body\" role=\"alert\">\n                <div class=\"content\">\n                    <slot></slot>\n                </div>\n                <slot name=\"action\"></slot>\n            </div>\n            <div class=\"buttons\">\n                <cm-clear-button\n                    label=\"Close\"\n                    variant=\"overBackground\"\n                    @click=${this.close}\n                ></cm-clear-button>\n            </div>\n        `;\n    }\n\n    protected updated(changes: PropertyValues): void {\n        super.updated(changes);\n        if (changes.has('open')) {\n            if (this.open) {\n                if (this.timeout) {\n                    this.startCountdown();\n                }\n            } else {\n                if (this.timeout) {\n                    this.stopCountdown();\n                }\n                const applyDefault = this.dispatchEvent(\n                    new CustomEvent('close', {\n                        composed: true,\n                        bubbles: true,\n                        cancelable: true,\n                    })\n                );\n                if (!applyDefault) {\n                    this.open = true;\n                }\n            }\n        }\n        if (changes.has('timeout')) {\n            if (this.timeout !== null && this.open) {\n                this.startCountdown();\n            } else {\n                this.stopCountdown();\n            }\n        }\n    }\n}\n"]}