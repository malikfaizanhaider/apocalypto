{"version":3,"file":"Tooltip.js","sourceRoot":"","sources":["../../../../../src/packages/tooltip/src/Tooltip.ts"],"names":[],"mappings":";AAAA,OAAO,EACH,IAAI,EAGJ,eAAe,EACf,QAAQ,EACR,KAAK,GACR,MAAM,sBAAsB,CAAC;AAO9B,OAAO,aAAa,MAAM,kBAAkB,CAAC;AAE7C;;;GAGG;AAEH,MAAM,OAAO,OAAQ,SAAQ,eAAe;IA6CxC;QACI,KAAK,EAAE,CAAC;QApCJ,eAAU,GAAG,iCAAiC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC;QAGzE,SAAI,GAAG,KAAK,CAAC;QAEpB;;;WAGG;QAEI,cAAS,GAAc,KAAK,CAAC;QAKpC,yFAAyF;QACjF,aAAQ,GAAG,EAAE,CAAC;QAqBlB,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IACnE,CAAC;IA/CM,MAAM,KAAK,MAAM;QACpB,OAAO,CAAC,aAAa,CAAC,CAAC;IAC3B,CAAC;IA0BD,IAAW,OAAO;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IACD,IAAW,OAAO,CAAC,OAAe;QAC9B,IAAI,OAAO,KAAK,IAAI,CAAC,OAAO,EAAE;YAC1B,OAAO;SACV;QACD,IAAI,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YACpD,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;YACtC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,OAAO;SACV;QACD,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,CAAC;IAOM,cAAc,CAAC,KAA6C;QAC/D,oBAAoB;QACpB,IAAI,CAAC,KAAK,CAAC,MAAM;YAAE,OAAO;QAE1B,MAAM,MAAM,GAAG,KAAK,CAAC,MAAc,CAAC;QACpC,oBAAoB;QACpB,IAAI,MAAM,KAAK,IAAI;YAAE,OAAO;QAE5B,KAAK,CAAC,MAAM,CAAC,wBAAwB,GAAG,IAAI,CAAC,UAAU,CAAC;IAC5D,CAAC;IAED,MAAM;QACF,OAAO,IAAI,CAAA;;;;SAIV,CAAC;IACN,CAAC;IAIM,uBAAuB,CAAC,EAC3B,OAAO,GAGV;QACG,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC7C,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;YAC3C,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;YACjC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;SAC/C;QACD,OAAO,CAAC,YAAY,CAAC,kBAAkB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAC1D,OAAO,CAAC,qBAAqB,CAAC,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;IAC9D,CAAC;IAEM,4BAA4B,CAAC,EAChC,OAAO,GAGV;QACG,IAAI,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;IAC3C,CAAC;IAEM,oBAAoB,CAAC,EAAE,OAAO,EAA4B;QAC7D,OAAO,CAAC,eAAe,CAAC,kBAAkB,CAAC,CAAC;QAC5C,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;QACpC,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAEO,WAAW;QACf,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;YACrB,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;SAC3B;IACL,CAAC;;AAtGD;;GAEG;AACI,qBAAa,GAAG,CAAC,CAAC;AAKzB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;qCACvB;AAOpB;IADC,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;0CACQ;AAGpC;IADC,KAAK,CAAC,MAAM,CAAC;2CACuB;AAMrC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;sCAG1B","sourcesContent":["import {\r\n    html,\r\n    CSSResultArray,\r\n    TemplateResult,\r\n    SpectrumElement,\r\n    property,\r\n    query,\r\n} from '../../base/src/index';\r\n\r\nimport {\r\n    OverlayDisplayQueryDetail,\r\n    Placement,\r\n} from '../../overlay/src';\r\n\r\nimport tooltipStyles from './tooltip.css.js';\r\n\r\n/**\r\n * @slot icon - The icon that appears on the left of the label\r\n * @slot - The label\r\n */\r\n\r\nexport class Tooltip extends SpectrumElement {\r\n    public static get styles(): CSSResultArray {\r\n        return [tooltipStyles];\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    static instanceCount = 0;\r\n\r\n    private _tooltipId = `cm-tooltip-describedby-helper-${Tooltip.instanceCount++}`;\r\n\r\n    @property({ type: Boolean, reflect: true })\r\n    public open = false;\r\n\r\n    /**\r\n     * @type {\"auto\" | \"auto-start\" | \"auto-end\" | \"top\" | \"bottom\" | \"right\" | \"left\" | \"top-start\" | \"top-end\" | \"bottom-start\" | \"bottom-end\" | \"right-start\" | \"right-end\" | \"left-start\" | \"left-end\" | \"none\"}\r\n     * @attr\r\n     */\r\n    @property({ reflect: true })\r\n    public placement: Placement = 'top';\r\n\r\n    @query('#tip')\r\n    private tipElement!: HTMLSpanElement;\r\n\r\n    /* Ensure that a '' value for `variant` removes the attribute instead of a blank value */\r\n    private _variant = '';\r\n\r\n    @property({ type: String })\r\n    public get variant(): string {\r\n        return this._variant;\r\n    }\r\n    public set variant(variant: string) {\r\n        if (variant === this.variant) {\r\n            return;\r\n        }\r\n        if (['info', 'positive', 'negative'].includes(variant)) {\r\n            this.setAttribute('variant', variant);\r\n            this._variant = variant;\r\n            return;\r\n        }\r\n        this.removeAttribute('variant');\r\n        this._variant = '';\r\n    }\r\n\r\n    public constructor() {\r\n        super();\r\n        this.addEventListener('sp-overlay-query', this.onOverlayQuery);\r\n    }\r\n\r\n    public onOverlayQuery(event: CustomEvent<OverlayDisplayQueryDetail>): void {\r\n        /* c8 ignore next */\r\n        if (!event.target) return;\r\n\r\n        const target = event.target as Node;\r\n        /* c8 ignore next */\r\n        if (target !== this) return;\r\n\r\n        event.detail.overlayContentTipElement = this.tipElement;\r\n    }\r\n\r\n    render(): TemplateResult {\r\n        return html`\r\n            <slot name=\"icon\"></slot>\r\n            <span id=\"label\"><slot></slot></span>\r\n            <span id=\"tip\"></span>\r\n        `;\r\n    }\r\n\r\n    private _proxy?: HTMLElement;\r\n\r\n    public overlayWillOpenCallback({\r\n        trigger,\r\n    }: {\r\n        trigger: HTMLElement;\r\n    }): void {\r\n        this.setAttribute('aria-hidden', 'true');\r\n        if (!this._proxy) {\r\n            this._proxy = document.createElement('span');\r\n            this._proxy.textContent = this.textContent;\r\n            this._proxy.id = this._tooltipId;\r\n            this._proxy.hidden = true;\r\n            this._proxy.setAttribute('role', 'tooltip');\r\n        }\r\n        trigger.setAttribute('aria-describedby', this._tooltipId);\r\n        trigger.insertAdjacentElement('beforebegin', this._proxy);\r\n    }\r\n\r\n    public overlayOpenCancelledCallback({\r\n        trigger,\r\n    }: {\r\n        trigger: HTMLElement;\r\n    }): void {\r\n        this.overlayCloseCallback({ trigger });\r\n    }\r\n\r\n    public overlayCloseCallback({ trigger }: { trigger: HTMLElement }): void {\r\n        trigger.removeAttribute('aria-describedby');\r\n        this.removeAttribute('aria-hidden');\r\n        this.removeProxy();\r\n    }\r\n\r\n    private removeProxy(): void {\r\n        if (this._proxy) {\r\n            this._proxy.remove();\r\n            this._proxy = undefined;\r\n        }\r\n    }\r\n}\r\n"]}