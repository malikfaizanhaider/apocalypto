{"version":3,"file":"Tooltip.js","sourceRoot":"","sources":["Tooltip.ts"],"names":[],"mappings":"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","sourcesContent":["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\nimport {\n    html,\n    CSSResultArray,\n    TemplateResult,\n    SpectrumElement,\n    property,\n    query,\n} from '@spectrum-web-components/base';\nimport {\n    OverlayDisplayQueryDetail,\n    Placement,\n} from '@spectrum-web-components/overlay';\n\nimport tooltipStyles from './tooltip.css.js';\n\n/**\n * @slot icon - The icon that appears on the left of the label\n * @slot - The label\n */\n\nexport class Tooltip extends SpectrumElement {\n    public static get styles(): CSSResultArray {\n        return [tooltipStyles];\n    }\n\n    /**\n     * @private\n     */\n    static instanceCount = 0;\n\n    private _tooltipId = `sp-tooltip-describedby-helper-${Tooltip.instanceCount++}`;\n\n    @property({ type: Boolean, reflect: true })\n    public open = false;\n\n    /**\n     * @type {\"auto\" | \"auto-start\" | \"auto-end\" | \"top\" | \"bottom\" | \"right\" | \"left\" | \"top-start\" | \"top-end\" | \"bottom-start\" | \"bottom-end\" | \"right-start\" | \"right-end\" | \"left-start\" | \"left-end\" | \"none\"}\n     * @attr\n     */\n    @property({ reflect: true })\n    public placement: Placement = 'top';\n\n    @query('#tip')\n    private tipElement!: HTMLSpanElement;\n\n    /* Ensure that a '' value for `variant` removes the attribute instead of a blank value */\n    private _variant = '';\n\n    @property({ type: String })\n    public get variant(): string {\n        return this._variant;\n    }\n    public set variant(variant: string) {\n        if (variant === this.variant) {\n            return;\n        }\n        if (['info', 'positive', 'negative'].includes(variant)) {\n            this.setAttribute('variant', variant);\n            this._variant = variant;\n            return;\n        }\n        this.removeAttribute('variant');\n        this._variant = '';\n    }\n\n    public constructor() {\n        super();\n        this.addEventListener('sp-overlay-query', this.onOverlayQuery);\n    }\n\n    public onOverlayQuery(event: CustomEvent<OverlayDisplayQueryDetail>): void {\n        /* c8 ignore next */\n        if (!event.target) return;\n\n        const target = event.target as Node;\n        /* c8 ignore next */\n        if (target !== this) return;\n\n        event.detail.overlayContentTipElement = this.tipElement;\n    }\n\n    render(): TemplateResult {\n        return html`\n            <slot name=\"icon\"></slot>\n            <span id=\"label\"><slot></slot></span>\n            <span id=\"tip\"></span>\n        `;\n    }\n\n    private _proxy?: HTMLElement;\n\n    public overlayWillOpenCallback({\n        trigger,\n    }: {\n        trigger: HTMLElement;\n    }): void {\n        this.setAttribute('aria-hidden', 'true');\n        if (!this._proxy) {\n            this._proxy = document.createElement('span');\n            this._proxy.textContent = this.textContent;\n            this._proxy.id = this._tooltipId;\n            this._proxy.hidden = true;\n            this._proxy.setAttribute('role', 'tooltip');\n        }\n        trigger.setAttribute('aria-describedby', this._tooltipId);\n        trigger.insertAdjacentElement('beforebegin', this._proxy);\n    }\n\n    public overlayOpenCancelledCallback({\n        trigger,\n    }: {\n        trigger: HTMLElement;\n    }): void {\n        this.overlayCloseCallback({ trigger });\n    }\n\n    public overlayCloseCallback({ trigger }: { trigger: HTMLElement }): void {\n        trigger.removeAttribute('aria-describedby');\n        this.removeAttribute('aria-hidden');\n        this.removeProxy();\n    }\n\n    private removeProxy(): void {\n        if (this._proxy) {\n            this._proxy.remove();\n            this._proxy = undefined;\n        }\n    }\n}\n"]}