{"version":3,"file":"Popover.js","sourceRoot":"","sources":["../../../../../src/packages/popover/src/Popover.ts"],"names":[],"mappings":";AAAA,OAAO,EAEH,IAAI,EACJ,OAAO,EACP,QAAQ,EACR,eAAe,GAElB,MAAM,sBAAsB,CAAC;AAK9B,OAAO,aAAa,MAAM,kBAAkB,CAAC;AAE7C;;;GAGG;AAEH,MAAM,OAAO,OAAQ,SAAQ,eAAe;IAA5C;;QAMW,SAAI,GAAG,KAAK,CAAC;QAEpB;;;WAGG;QAEI,cAAS,GAAc,MAAM,CAAC;QAG9B,QAAG,GAAG,KAAK,CAAC;IAiDvB,CAAC;IAhEU,MAAM,KAAK,MAAM;QACpB,OAAO,CAAC,aAAa,CAAC,CAAC;IAC3B,CAAC;IAeS,SAAS;QACf,OAAO,IAAI,CAAA;;;;;;;;;;;;;SAaV,CAAC;IACN,CAAC;IAEM,iBAAiB;QACpB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IACnE,CAAC;IAEM,oBAAoB;QACvB,KAAK,CAAC,oBAAoB,EAAE,CAAC;QAC7B,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IACtE,CAAC;IAEM,cAAc,CAAC,KAA6C;QAC/D,oBAAoB;QACpB,IAAI,CAAC,KAAK,CAAC,MAAM;YAAE,OAAO;QAE1B,MAAM,MAAM,GAAG,KAAK,CAAC,MAAc,CAAC;QACpC,oBAAoB;QACpB,IAAI,MAAM,KAAK,IAAI;YAAE,OAAO;QAE5B,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,MAAM,CAAgB,CAAC;QACxE,IAAI,UAAU,EAAE;YACZ,KAAK,CAAC,MAAM,CAAC,wBAAwB,GAAG,UAAU,CAAC;SACtD;IACL,CAAC;IAES,MAAM;QACZ,OAAO,IAAI,CAAA;;cAEL,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,OAAO;SAC1C,CAAC;IACN,CAAC;CACJ;AA3DG;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;qCACvB;AAOpB;IADC,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;0CACS;AAGrC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;oCACxB","sourcesContent":["import {\r\n    CSSResultArray,\r\n    html,\r\n    nothing,\r\n    property,\r\n    SpectrumElement,\r\n    TemplateResult,\r\n} from '../../base/src/index';\r\nimport {\r\n    OverlayDisplayQueryDetail,\r\n    Placement,\r\n} from '../../overlay/src';\r\nimport popoverStyles from './popover.css.js';\r\n\r\n/**\r\n * @attr {Boolean} open - The open state of the popover\r\n * @attr {Boolean} dialog - Adds some padding to the popover\r\n */\r\n\r\nexport class Popover extends SpectrumElement {\r\n    public static get styles(): CSSResultArray {\r\n        return [popoverStyles];\r\n    }\r\n\r\n    @property({ type: Boolean, reflect: true })\r\n    public open = false;\r\n\r\n    /**\r\n     * @type {\"auto\" | \"auto-start\" | \"auto-end\" | \"top\" | \"bottom\" | \"right\" | \"left\" | \"top-start\" | \"top-end\" | \"bottom-start\" | \"bottom-end\" | \"right-start\" | \"right-end\" | \"left-start\" | \"left-end\" | \"none\"}\r\n     * @attr\r\n     */\r\n    @property({ reflect: true })\r\n    public placement: Placement = 'none';\r\n\r\n    @property({ type: Boolean, reflect: true })\r\n    public tip = false;\r\n\r\n    protected renderTip(): TemplateResult {\r\n        return html`\r\n            <div id=\"tip\">\r\n                <svg\r\n                    xmlns=\"http://www.w3.org/svg/2000\"\r\n                    class=\"tip\"\r\n                    viewBox=\"0 0 24 12\"\r\n                >\r\n                    <path\r\n                        class=\"triangle\"\r\n                        d=\"M 0.7071067811865476 0 L 11.414213562373096 10.707106781186548 L 22.121320343559645 0\"\r\n                    ></path>\r\n                </svg>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    public connectedCallback(): void {\r\n        super.connectedCallback();\r\n        this.addEventListener('sp-overlay-query', this.onOverlayQuery);\r\n    }\r\n\r\n    public disconnectedCallback(): void {\r\n        super.disconnectedCallback();\r\n        this.removeEventListener('sp-overlay-query', this.onOverlayQuery);\r\n    }\r\n\r\n    public onOverlayQuery(event: CustomEvent<OverlayDisplayQueryDetail>): void {\r\n        /* c8 ignore next */\r\n        if (!event.target) return;\r\n\r\n        const target = event.target as Node;\r\n        /* c8 ignore next */\r\n        if (target !== this) return;\r\n\r\n        const tipElement = this.shadowRoot.querySelector('#tip') as HTMLElement;\r\n        if (tipElement) {\r\n            event.detail.overlayContentTipElement = tipElement;\r\n        }\r\n    }\r\n\r\n    protected render(): TemplateResult {\r\n        return html`\r\n            <slot></slot>\r\n            ${this.tip ? this.renderTip() : nothing}\r\n        `;\r\n    }\r\n}\r\n"]}