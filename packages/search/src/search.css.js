"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
exports.__esModule = true;
var index_1 = require("../../base/src/index");
var styles = index_1.css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    :host {\n        --cm-search-quiet-button-offset: calc(var(--cm-actionbutton-m-min-width,\n        var(--cm-global-dimension-size-400)) / 2 - var(--cm-icon-cross-small-width,\n        var(--cm-global-dimension-size-100)) / 2);\n        display: inline-block;\n        position: relative;\n        \n    }\n\n    :host([dir=ltr]) #button {\n        right: 0\n    }\n\n    :host([dir=rtl]) #button {\n        left: 0\n    }\n\n    :host > .icon.search {\n        font-size: var(--i2c-icon-size-xs);\n        position: relative !important;\n        width: var(--i2c-icon-size-xs);\n        height: var(--i2c-icon-size-xs);\n        color: red\n    }\n    \n    #button {\n        position: absolute;\n        top: 0\n    }\n\n    #input {\n        -webkit-appearance: none;\n        outline-offset: -2px\n    }\n\n    #input::-webkit-search-cancel-button, #input::-webkit-search-decoration {\n        -webkit-appearance: none\n    }\n\n    .spectrum-Search--quiet #button {\n        transform: translateX(var(--cm-search-quiet-button-offset))\n    }\n\n    .icon.search {\n        color: var(--i2c-dark-50)\n    }\n\n    #input:hover ~ .icon {\n        color: var(--cm-search-m-icon-color-hover, var(--cm-global-color-gray-900))\n    }\n\n    #input:active ~ .icon {\n        color: var(--cm-search-m-icon-color-down, var(--cm-alias-icon-color-down))\n    }\n\n    #input.focus-visible ~ .icon, #input.focus-visible ~ .icon {\n        color: var(--cm-search-m-icon-color-key-focus, var(--cm-global-color-gray-900))\n    }\n\n    #input.focus-visible ~ .icon, #input:focus-visible ~ .icon {\n        color: var(--cm-search-m-icon-color-key-focus, var(--cm-global-color-gray-900))\n    }\n\n    #input:disabled ~ .icon {\n        color: var(--cm-textfield-m-text-color-disabled, var(--cm-alias-text-color-disabled))\n    }\n"], ["\n    :host {\n        --cm-search-quiet-button-offset: calc(var(--cm-actionbutton-m-min-width,\n        var(--cm-global-dimension-size-400)) / 2 - var(--cm-icon-cross-small-width,\n        var(--cm-global-dimension-size-100)) / 2);\n        display: inline-block;\n        position: relative;\n        \n    }\n\n    :host([dir=ltr]) #button {\n        right: 0\n    }\n\n    :host([dir=rtl]) #button {\n        left: 0\n    }\n\n    :host > .icon.search {\n        font-size: var(--i2c-icon-size-xs);\n        position: relative !important;\n        width: var(--i2c-icon-size-xs);\n        height: var(--i2c-icon-size-xs);\n        color: red\n    }\n    \n    #button {\n        position: absolute;\n        top: 0\n    }\n\n    #input {\n        -webkit-appearance: none;\n        outline-offset: -2px\n    }\n\n    #input::-webkit-search-cancel-button, #input::-webkit-search-decoration {\n        -webkit-appearance: none\n    }\n\n    .spectrum-Search--quiet #button {\n        transform: translateX(var(--cm-search-quiet-button-offset))\n    }\n\n    .icon.search {\n        color: var(--i2c-dark-50)\n    }\n\n    #input:hover ~ .icon {\n        color: var(--cm-search-m-icon-color-hover, var(--cm-global-color-gray-900))\n    }\n\n    #input:active ~ .icon {\n        color: var(--cm-search-m-icon-color-down, var(--cm-alias-icon-color-down))\n    }\n\n    #input.focus-visible ~ .icon, #input.focus-visible ~ .icon {\n        color: var(--cm-search-m-icon-color-key-focus, var(--cm-global-color-gray-900))\n    }\n\n    #input.focus-visible ~ .icon, #input:focus-visible ~ .icon {\n        color: var(--cm-search-m-icon-color-key-focus, var(--cm-global-color-gray-900))\n    }\n\n    #input:disabled ~ .icon {\n        color: var(--cm-textfield-m-text-color-disabled, var(--cm-alias-text-color-disabled))\n    }\n"])));
exports["default"] = styles;
var templateObject_1;
