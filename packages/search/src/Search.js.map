{"version":3,"file":"Search.js","sourceRoot":"","sources":["../../../../../src/packages/search/src/Search.ts"],"names":[],"mappings":";AAAA,OAAO,EACH,IAAI,EAIJ,QAAQ,EACR,KAAK,EACL,SAAS,GACZ,MAAM,sBAAsB,CAAC;AAE9B,OAAO,EAAE,SAAS,EAAE,MAAM,2BAA2B,CAAC;AAEtD,OAAO,iCAAiC,CAAC;AAEzC,OAAO,YAAY,MAAM,iBAAiB,CAAC;AAE3C,MAAM,eAAe,GAAG,CAAC,KAAY,EAAQ,EAAE,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC;AAExE,MAAM,OAAO,MAAO,SAAQ,SAAS;IAArC;;QASW,UAAK,GAAG,QAAQ,CAAC;QAMjB,gBAAW,GAAG,QAAQ,CAAC;IA+ElC,CAAC;IA7FU,MAAM,KAAK,MAAM;QACpB,OAAO,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IAC3C,CAAC;IAiBO,YAAY,CAAC,KAAY;QAC7B,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CACnC,IAAI,KAAK,CAAC,QAAQ,EAAE;YAChB,UAAU,EAAE,IAAI;YAChB,OAAO,EAAE,IAAI;SAChB,CAAC,CACL,CAAC;QACF,IAAI,CAAC,YAAY,EAAE;YACf,KAAK,CAAC,cAAc,EAAE,CAAC;SAC1B;IACL,CAAC;IAEO,aAAa,CAAC,KAAoB;QACtC,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,KAAK,QAAQ,EAAE;YAClC,OAAO;SACV;QACD,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAEM,KAAK,CAAC,KAAK;QACd,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,MAAM,IAAI,CAAC,cAAc,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,aAAa,CAC3B,IAAI,UAAU,CAAC,OAAO,EAAE;YACpB,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACjB,CAAC,CACL,CAAC;QACF,mEAAmE;QACnE,gEAAgE;QAChE,iEAAiE;QACjE,0CAA0C;QAC1C,IAAI,CAAC,YAAY,CAAC,aAAa,CAC3B,IAAI,UAAU,CAAC,QAAQ,EAAE;YACrB,OAAO,EAAE,IAAI;SAChB,CAAC,CACL,CAAC;IACN,CAAC;IAES,MAAM;QACZ,OAAO,IAAI,CAAA;;yBAEM,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;;yBAEtB,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC;0BACrB,IAAI,CAAC,YAAY;yBAClB,IAAI,CAAC,KAAK;2BACR,IAAI,CAAC,aAAa;;;;;;kBAM3B,KAAK,CAAC,MAAM,EAAE;kBACd,IAAI,CAAC,KAAK;YACR,CAAC,CAAC,IAAI,CAAA;;;;;;yCAMe,eAAe;;uBAEjC;YACH,CAAC,CAAC,IAAI,CAAA,EAAE;;SAEnB,CAAC;IACN,CAAC;IAEM,OAAO,CAAC,iBAAiC;QAC5C,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IAC3B,CAAC;CACJ;AAxFG;IADC,QAAQ,EAAE;sCACY;AAGvB;IADC,QAAQ,EAAE;qCACa;AAGxB;IADC,QAAQ,EAAE;sCAC+B;AAG1C;IADC,QAAQ,EAAE;2CACmB;AAG9B;IADC,KAAK,CAAC,OAAO,CAAC;oCACe","sourcesContent":["import {\r\n    html,\r\n    CSSResultArray,\r\n    PropertyValues,\r\n    TemplateResult,\r\n    property,\r\n    query,\r\n    ifDefined,\r\n} from '../../base/src/index';\r\n\r\nimport { Textfield } from '../../textfield/src/index';\r\n\r\nimport '../../button/sp-clear-button.js';\r\n\r\nimport searchStyles from './search.css.js';\r\n\r\nconst stopPropagation = (event: Event): void => event.stopPropagation();\r\n\r\nexport class Search extends Textfield {\r\n    public static get styles(): CSSResultArray {\r\n        return [...super.styles, searchStyles];\r\n    }\r\n\r\n    @property()\r\n    public action?: string;\r\n\r\n    @property()\r\n    public label = 'Search';\r\n\r\n    @property()\r\n    public method?: 'GET' | 'POST' | 'dialog';\r\n\r\n    @property()\r\n    public placeholder = 'Search';\r\n\r\n    @query('#form')\r\n    public form!: HTMLFormElement;\r\n\r\n    private handleSubmit(event: Event): void {\r\n        const applyDefault = this.dispatchEvent(\r\n            new Event('submit', {\r\n                cancelable: true,\r\n                bubbles: true,\r\n            })\r\n        );\r\n        if (!applyDefault) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    private handleKeydown(event: KeyboardEvent): void {\r\n        const { code } = event;\r\n        if (!this.value || code !== 'Escape') {\r\n            return;\r\n        }\r\n        this.reset();\r\n    }\r\n\r\n    public async reset(): Promise<void> {\r\n        this.value = '';\r\n        await this.updateComplete;\r\n        this.focusElement.dispatchEvent(\r\n            new InputEvent('input', {\r\n                bubbles: true,\r\n                composed: true,\r\n            })\r\n        );\r\n        // The native `change` event on an `input` element is not composed,\r\n        // so this synthetic replication of a `change` event must not be\r\n        // either as the `TextField` baseclass should only need to handle\r\n        // the native variant of this interaction.\r\n        this.focusElement.dispatchEvent(\r\n            new InputEvent('change', {\r\n                bubbles: true,\r\n            })\r\n        );\r\n    }\r\n\r\n    protected render(): TemplateResult {\r\n        return html`\r\n            <form\r\n                action=${ifDefined(this.action)}\r\n                id=\"form\"\r\n                method=${ifDefined(this.method)}\r\n                @submit=${this.handleSubmit}\r\n                @reset=${this.reset}\r\n                @keydown=${this.handleKeydown}\r\n            >\r\n                <iron-icon\r\n                    icon=\"vaadin:search\"\r\n                    class=\"icon search icon-workflow \"\r\n                ></iron-icon>\r\n                ${super.render()}\r\n                ${this.value\r\n                    ? html`\r\n                          <cm-clear-button\r\n                              id=\"button\"\r\n                              label=\"Reset\"\r\n                              tabindex=\"-1\"\r\n                              type=\"reset\"\r\n                              @keydown=${stopPropagation}\r\n                          ></cm-clear-button>\r\n                      `\r\n                    : html``}\r\n            </form>\r\n        `;\r\n    }\r\n\r\n    public updated(changedProperties: PropertyValues): void {\r\n        super.updated(changedProperties);\r\n        this.multiline = false;\r\n    }\r\n}\r\n"]}