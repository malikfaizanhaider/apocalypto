{"version":3,"file":"ProgressCircle.js","sourceRoot":"","sources":["ProgressCircle.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\nCopyright 2020 Adobe. All rights reserved.\r\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License. You may obtain a copy\r\nof the License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software distributed under\r\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\r\nOF ANY KIND, either express or implied. See the License for the specific language\r\ngoverning permissions and limitations under the License.\r\n*/\r\n\r\nimport {\r\n    html,\r\n    SpectrumElement,\r\n    CSSResultArray,\r\n    TemplateResult,\r\n    property,\r\n    PropertyValues,\r\n    ifDefined,\r\n} from '@spectrum-web-components/base';\r\n\r\nimport progressCircleStyles from './progress-circle.css.js';\r\n\r\n/**\r\n * @element sp-progress-circle\r\n */\r\nexport class ProgressCircle extends SpectrumElement {\r\n    public static get styles(): CSSResultArray {\r\n        return [progressCircleStyles];\r\n    }\r\n\r\n    @property({ type: Boolean, reflect: true })\r\n    public indeterminate = false;\r\n\r\n    @property({ type: String })\r\n    public label = '';\r\n\r\n    @property({ type: Boolean, reflect: true, attribute: 'over-background' })\r\n    public overBackground = false;\r\n\r\n    @property({ type: Number })\r\n    public progress = 0;\r\n\r\n    @property({ type: String, reflect: true })\r\n    public size: '' | 'small' | 'large' = '';\r\n\r\n    private makeRotation(rotation: number): string | undefined {\r\n        return this.indeterminate\r\n            ? undefined\r\n            : `transform: rotate(${rotation}deg);`;\r\n    }\r\n\r\n    protected render(): TemplateResult {\r\n        const styles = [\r\n            this.makeRotation(-180 + (180 / 50) * Math.min(this.progress, 50)),\r\n            this.makeRotation(\r\n                -180 + (180 / 50) * Math.max(this.progress - 50, 0)\r\n            ),\r\n        ];\r\n        const masks = ['Mask1', 'Mask2'];\r\n        return html`\r\n            <div class=\"track\"></div>\r\n            <div class=\"fills\">\r\n                ${masks.map(\r\n                    (mask, index) => html`\r\n                        <div class=\"fill${mask}\">\r\n                            <div\r\n                                class=\"fillSub${mask}\"\r\n                                style=${ifDefined(styles[index])}\r\n                            >\r\n                                <div class=\"fill\"></div>\r\n                            </div>\r\n                        </div>\r\n                    `\r\n                )}\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    protected firstUpdated(changes: PropertyValues): void {\r\n        super.firstUpdated(changes);\r\n        if (!this.hasAttribute('role')) {\r\n            this.setAttribute('role', 'progressbar');\r\n        }\r\n    }\r\n\r\n    protected updated(changes: PropertyValues): void {\r\n        super.updated(changes);\r\n        if (!this.indeterminate && changes.has('progress')) {\r\n            this.setAttribute('aria-valuenow', '' + this.progress);\r\n        } else if (this.hasAttribute('aria-valuenow')) {\r\n            this.removeAttribute('aria-valuenow');\r\n        }\r\n        if (this.label && changes.has('label')) {\r\n            this.setAttribute('aria-label', this.label);\r\n        }\r\n    }\r\n}\r\n"]}