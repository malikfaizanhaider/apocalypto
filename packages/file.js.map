{"version":3,"file":"file.js","sourceRoot":"","sources":["../../../src/packages/file.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,gBAAgB,CAAC;AAGvD,IAAa,MAAM,GAAnB,MAAa,MAAO,SAAQ,UAAU;IAAtC;;QAaE,kEAAkE;QAClE,2BAA2B;QACf,aAAQ,GAAG,OAAO,CAAC;QACnB,WAAM,GAAG,OAAO,CAAC;IAsB/B,CAAC;IApBC,qEAAqE;IACrE,kEAAkE;IAClE,yDAAyD;IACzD,yEAAyE;IACzE,wBAAwB;IACxB,MAAM;QACJ,OAAO,IAAI,CAAA;qCACsB,IAAI,CAAC,YAAY;WAC3C,IAAI,CAAC,QAAQ;+BACO,IAAI,CAAC,MAAM;;KAErC,CAAC;IACJ,CAAC;IAED,oEAAoE;IACpE,oCAAoC;IACpC,YAAY;QACV,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,KAAK,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;IAC3D,CAAC;CAEF,CAAA;AArCQ,aAAM,GAAG,GAAG,CAAA;;;;;;;;;GASlB,CAAC;AAKU;IAAX,QAAQ,EAAE;wCAAoB;AACnB;IAAX,QAAQ,EAAE;sCAAkB;AAhBlB,MAAM;IADlB,aAAa,CAAC,SAAS,CAAC;GACZ,MAAM,CAsClB;SAtCY,MAAM","sourcesContent":["import {LitElement, html, css} from 'lit';\r\nimport {customElement, property} from 'lit/decorators';\r\n\r\n@customElement('i2c-lit')\r\nexport class I2cLit extends LitElement {\r\n  static styles = css`\r\n    :host {\r\n      display: inline-block;\r\n      padding: 10px;\r\n      background: lightgray;\r\n    }\r\n    .planet {\r\n      color: var(--planet-color, blue);\r\n    }\r\n  `;\r\n\r\n\r\n  // Define reactive properties--updating a reactive property causes\r\n  // the component to update.\r\n  @property() greeting = \"Hello\";\r\n  @property() planet = \"World\";\r\n\r\n  // The render() method is called any time reactive properties change.\r\n  // Return HTML in a string template literal tagged with the `html`\r\n  // tag function to describe the component's internal DOM.\r\n  // Expressions can set attribute values, proeprty values, event handlers,\r\n  // and child nodes/text.\r\n  render() {\r\n    return html`\r\n      <button role='button' @click=${this.togglePlanet}\r\n        >${this.greeting}\r\n        <span class=\"planet\">${this.planet}</span>\r\n      </button>\r\n    `;\r\n  }\r\n\r\n  // Event handlers can update the state of @properties on the element\r\n  // instance, causing it to re-render\r\n  togglePlanet() {\r\n    this.planet = this.planet === \"World\" ? \"Mars\" : \"World\";\r\n  }\r\n\r\n}\r\n"]}