{"version":3,"file":"multiselect-combo-box-mixin.js","sourceRoot":"","sources":["../../../../../src/packages/multisselect/src/multiselect-combo-box-mixin.js"],"names":[],"mappings":"AAAA;;GAEG;AACH,MAAM,CAAC,MAAM,wBAAwB,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,KAAM,SAAQ,IAAI;IAElE,MAAM,KAAK,UAAU;QACnB,OAAO;YACL;;eAEG;YACH,KAAK,EAAE,KAAK;YAEZ;;eAEG;YACH,WAAW,EAAE;gBACX,IAAI,EAAE,MAAM;gBACZ,KAAK,EAAE,EAAE;aACV;YAED;;eAEG;YACH,QAAQ,EAAE;gBACR,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,KAAK;gBACZ,kBAAkB,EAAE,IAAI;aACzB;YAED;;eAEG;YACH,QAAQ,EAAE;gBACR,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,KAAK;gBACZ,kBAAkB,EAAE,IAAI;aACzB;YAED;;;eAGG;YACH,WAAW,EAAE;gBACX,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,KAAK;gBACZ,kBAAkB,EAAE,IAAI;aACzB;YAED;;;;;eAKG;YACH,yBAAyB,EAAE,QAAQ;YAEnC;;eAEG;YACH,aAAa,EAAE,MAAM;YAErB;;eAEG;YACH,aAAa,EAAE,MAAM;YAErB;;;;eAIG;YACH,UAAU,EAAE,MAAM;YAElB;;;;eAIG;YACH,KAAK,EAAE,MAAM;YAEb;;eAEG;YACH,QAAQ,EAAE;gBACR,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,KAAK;gBACZ,kBAAkB,EAAE,IAAI;aACzB;YAED;;eAEG;YACH,kBAAkB,EAAE;gBAClB,IAAI,EAAE,OAAO;gBACb,KAAK,EAAE,KAAK;aACb;SACF,CAAC;IACJ,CAAC;IAED;;;OAGG;IACH,aAAa,CAAC,IAAI,EAAE,aAAa;QAC/B,OAAO,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACjF,CAAC;IAED;;;OAGG;IACH,oBAAoB,CAAC,KAAK;QACxB,IAAI,IAAI,CAAC,yBAAyB,IAAI,OAAO,IAAI,CAAC,yBAAyB,KAAK,UAAU,EAAE;YAC1F,OAAO,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;SAC9C;aAAM;YACL,MAAM,MAAM,GAAG,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC;YAC7E,OAAO,GAAG,KAAK,CAAC,MAAM,IAAI,MAAM,EAAE,CAAC;SACpC;IACH,CAAC;CACF,CAAC","sourcesContent":["/**\r\n * @polymerMixin\r\n */\r\nexport const MultiselectComboBoxMixin = (base) => class extends base {\r\n\r\n  static get properties() {\r\n    return {\r\n      /**\r\n       * The list of items.\r\n       */\r\n      items: Array,\r\n\r\n      /**\r\n       * The input placeholder.\r\n       */\r\n      placeholder: {\r\n        type: String,\r\n        value: ''\r\n      },\r\n\r\n      /**\r\n       * This attribute indicates that the component has a value.\r\n       */\r\n      hasValue: {\r\n        type: Boolean,\r\n        value: false,\r\n        reflectToAttribute: true\r\n      },\r\n\r\n      /**\r\n       * This attribute indicates that the component has a label.\r\n       */\r\n      hasLabel: {\r\n        type: Boolean,\r\n        value: false,\r\n        reflectToAttribute: true\r\n      },\r\n\r\n      /**\r\n       * This attribute indicates that the component is rendered in 'compact mode'.\r\n       * In this mode, the component displays the number of items currently selected.\r\n       */\r\n      compactMode: {\r\n        type: Boolean,\r\n        value: false,\r\n        reflectToAttribute: true\r\n      },\r\n\r\n      /**\r\n       * Custom function for generating the display label when in compact mode.\r\n       *\r\n       * This function receives the array of selected items and should return\r\n       * a string value that will be used as the display label.\r\n       */\r\n      compactModeLabelGenerator: Function,\r\n\r\n      /**\r\n       * The item property to be used as the `label` in combo-box.\r\n       */\r\n      itemLabelPath: String,\r\n\r\n      /**\r\n       * The item property to be used as the `value` of combo-box.\r\n       */\r\n      itemValuePath: String,\r\n\r\n      /**\r\n       * Path for the id of the item. If `items` is an array of objects,\r\n       * the `itemIdPath` is used to compare and identify the same item\r\n       * in `selectedItem`.\r\n       */\r\n      itemIdPath: String,\r\n\r\n      /**\r\n       * The theme name attribute.\r\n       * Used to communicate theme information to\r\n       * component internals (currently used for the material theme).\r\n       */\r\n      theme: String,\r\n\r\n      /**\r\n       * Set to true to disable this element.\r\n       */\r\n      disabled: {\r\n        type: Boolean,\r\n        value: false,\r\n        reflectToAttribute: true\r\n      },\r\n\r\n      /**\r\n       * Set to true to display the clear icon which clears the input.\r\n       */\r\n      clearButtonVisible: {\r\n        type: Boolean,\r\n        value: false\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Returns the item display label.\r\n   * @protected\r\n   */\r\n  _getItemLabel(item, itemLabelPath) {\r\n    return item && item.hasOwnProperty(itemLabelPath) ? item[itemLabelPath] : item;\r\n  }\r\n\r\n  /**\r\n   * Retrieves the component display label when in compact mode.\r\n   * @protected\r\n   */\r\n  _getCompactModeLabel(items) {\r\n    if (this.compactModeLabelGenerator && typeof this.compactModeLabelGenerator === 'function') {\r\n      return this.compactModeLabelGenerator(items);\r\n    } else {\r\n      const suffix = (items.length === 0 || items.length > 1) ? 'values' : 'value';\r\n      return `${items.length} ${suffix}`;\r\n    }\r\n  }\r\n};\r\n"]}